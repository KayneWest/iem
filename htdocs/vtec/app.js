Ext.namespace("iemdata");iemdata.nws_products=[["AFD","Area Forecast Discussion"],["HWO","Hazzardous Weather Outlook"],["NOW","Nowcast"]];
iemdata.vtec_phenomena_dict=[["SV","Severe Thunderstorm"],["TO","Tornado"],["MA","Marine"],["AF","Volcanic Ashfall"],["AS","Air Stagnation"],["AV","Avalanche"],["BS","Blowing Snow"],["BZ","Blizzard"],["CF","Coastal Flood"],["DU","Blowing Dust"],["DS","Dust Storm"],["EC","Extreme Cold"],["EH","Excessive Heat"],["EW","Extreme Wind"],["FA","Areal Flood"],["FF","Flash Flood"],["FL","Flood"],["FR","Frost"],["FZ","Freeze"],["FG","Dense Fog"],["FW","Red Flag"],["GL","Gale"],["HF","Hurricane Force Wind"],
["HI","Inland Hurricane Wind"],["HS","Heavy Snow"],["HP","Heavy Sleet"],["HT","Heat"],["HU","Hurricane"],["HW","High Wind"],["HY","Hydrologic"],["HZ","Hard Freeze"],["IS","Ice Storm"],["IP","Sleet"],["LB","Lake Effect Snow and Blowing Snow"],["LE","Lake Effect Snow"],["LO","Low Water"],["LS","Lakeshore Flood"],["LW","Lake Wind"],["RB","Small Craft for Rough Bar"],["RH","Radiological Hazard"],["SB","Snow and Blowing Snow"],["SC","Small Craft"],["SE","Hazardous Seas"],["SI","Small Craft for Winds"],
["SM","Dense Smoke"],["SN","Snow"],["SR","Storm"],["SU","High Surf"],["TI","Inland Tropical Storm Wind"],["TR","Tropical Storm"],["TS","Tsunami"],["TY","Typhoon"],["UP","Ice Accretion"],["VO","Volcano"],["WC","Wind Chill"],["WI","Wind"],["WS","Winter Storm"],["WW","Winter Weather"],["ZF","Freezing Fog"],["ZR","Freezing Rain"]];iemdata.vtec_sig_dict=[["W","Warning"],["Y","Advisory"],["A","Watch"],["S","Statement"],["F","Forecast"],["O","Outlook"],["N","Synopsis"]];
iemdata.wfos=[["ABQ","ALBUQUERQUE"],["ABR","ABERDEEN"],["AFC","ANCHORAGE"],["AFG","FAIRBANKS"],["AJK","JUNEAU"],["AKQ","WAKEFIELD"],["ALY","ALBANY"],["AMA","AMARILLO"],["APX","GAYLORD"],["ARX","LA_CROSSE"],["BGM","BINGHAMTON"],["BIS","BISMARCK"],["BMX","BIRMINGHAM"],["BOI","BOISE"],["BOU","DENVER"],["BOX","TAUNTON"],["BRO","BROWNSVILLE"],["BTV","BURLINGTON"],["BUF","BUFFALO"],["BYZ","BILLINGS"],["CAE","COLUMBIA"],["CAR","CARIBOU"],["CHS","CHARLESTON, SC"],["CLE","CLEVELAND"],["CRP","CORPUS_CHRISTI"],
["CTP","STATE_COLLEGE"],["CYS","CHEYENNE"],["DDC","DODGE_CITY"],["DLH","DULUTH"],["DMX","DES_MOINES"],["DTX","DETROIT"],["DVN","QUAD_CITIES_IA"],["EAX","KANSAS_CITY/PLEASANT_HILL"],["EKA","EUREKA"],["EPZ","EL_PASO_TX/SANTA_TERESA"],["EWX","AUSTIN/SAN_ANTONIO"],["EYW","KEY_WEST"],["FFC","PEACHTREE_CITY"],["FGF","EASTERN_NORTH_DAKOTA"],["FGZ","FLAGSTAFF"],["FSD","SIOUX_FALLS"],["FWD","DALLAS/FORT_WORTH"],["GGW","GLASGOW"],["GID","HASTINGS"],["GJT","GRAND_JUNCTION"],["GLD","GOODLAND"],["GRB","GREEN_BAY"],
["GRR","GRAND_RAPIDS"],["GSP","GREENVILLE/SPARTANBURG"],["GYX","GRAY"],["HFO","HONOLULU"],["HGX","HOUSTON/GALVESTON"],["HNX","SAN_JOAQUIN_VALLEY/HANFORD"],["HUN","HUNTSVILLE"],["ICT","WICHITA"],["ILM","WILMINGTON, NC"],["ILN","WILMINGTON, OH"],["ILX","LINCOLN"],["IND","INDIANAPOLIS"],["IWX","NORTHERN_INDIANA"],["JAN","JACKSON, MS"],["JAX","JACKSONVILLE"],["JKL","JACKSON, KY"],["LBF","NORTH_PLATTE"],["LCH","LAKE_CHARLES"],["LIX","NEW_ORLEANS"],["LKN","ELKO"],["LMK","LOUISVILLE"],["LOT","CHICAGO"],
["LOX","LOS_ANGELES/OXNARD"],["LSX","ST_LOUIS"],["LUB","LUBBOCK"],["LWX","BALTIMORE_MD/_WASHINGTON_DC"],["LZK","LITTLE_ROCK"],["MAF","MIDLAND/ODESSA"],["MEG","MEMPHIS"],["MFL","MIAMI"],["MFR","MEDFORD"],["MHX","NEWPORT/MOREHEAD_CITY"],["MKX","MILWAUKEE/SULLIVAN"],["MLB","MELBOURNE"],["MOB","MOBILE"],["MPX","TWIN_CITIES/CHANHASSEN"],["MQT","MARQUETTE"],["MRX","MORRISTOWN"],["MSO","MISSOULA"],["MTR","SAN_FRANCISCO"],["OAX","OMAHA/VALLEY"],["OHX","NASHVILLE"],["OKX","NEW_YORK"],["OTX","SPOKANE"],["OUN",
"NORMAN"],["PAH","PADUCAH"],["PBZ","PITTSBURGH"],["PDT","PENDLETON"],["PHI","MOUNT_HOLLY"],["PIH","POCATELLO/IDAHO_FALLS"],["PQR","PORTLAND"],["PSR","PHOENIX"],["PUB","PUEBLO"],["RAH","RALEIGH"],["REV","RENO"],["RIW","RIVERTON"],["RLX","CHARLESTON, WV"],["RNK","BLACKSBURG"],["SEW","SEATTLE"],["SGF","SPRINGFIELD"],["SGX","SAN_DIEGO"],["SHV","SHREVEPORT"],["SJT","SAN_ANGELO"],["SJU","SAN_JUAN"],["SLC","SALT_LAKE_CITY"],["STO","SACRAMENTO"],["TAE","TALLAHASSEE"],["TBW","TAMPA_BAY_AREA/RUSKIN"],["TFX",
"GREAT_FALLS"],["TOP","TOPEKA"],["TSA","TULSA"],["TWC","TUCSON"],["UNR","RAPID_CITY"],["VEF","LAS_VEGAS"]];Ext.grid.RowExpander=function(a){Ext.apply(this,a);this.addEvents({beforeexpand:true,expand:true,beforecollapse:true,collapse:true});Ext.grid.RowExpander.superclass.constructor.call(this);if(this.tpl){if(typeof this.tpl=="string")this.tpl=new Ext.Template(this.tpl);this.tpl.compile()}this.state={};this.bodyContent={}};
Ext.extend(Ext.grid.RowExpander,Ext.util.Observable,{header:"",width:20,sortable:false,fixed:true,dataIndex:"",id:"expander",lazyRender:true,enableCaching:true,getRowClass:function(a,b,c){c.cols-=1;var d=this.bodyContent[a.id];if(!d&&!this.lazyRender)d=this.getBodyContent(a,b);if(d)c.body=d;return this.state[a.id]?"x-grid3-row-expanded":"x-grid3-row-collapsed"},init:function(a){this.grid=a;var b=a.getView();b.getRowClass=this.getRowClass.createDelegate(this);b.enableRowBody=true;a.on("render",function(){b.mainBody.on("mousedown",
this.onMouseDown,this)},this)},getBodyContent:function(a){if(!this.enableCaching)return this.tpl.apply(a.data);var b=this.bodyContent[a.id];if(!b){b=this.tpl.apply(a.data);this.bodyContent[a.id]=b}return b},onMouseDown:function(a,b){if(b.className=="x-grid3-row-expander"){a.stopEvent();this.toggleRow(a.getTarget(".x-grid3-row"))}},renderer:function(a,b){b.cellAttr='rowspan="2"';return'<div class="x-grid3-row-expander">&#160;</div>'},beforeExpand:function(a,b,c){if(this.fireEvent("beforeexpand",this,
a,b,c)!==false){if(this.tpl&&this.lazyRender)b.innerHTML=this.getBodyContent(a,c);return true}else return false},toggleRow:function(a){if(typeof a=="number")a=this.grid.view.getRow(a);this[Ext.fly(a).hasClass("x-grid3-row-collapsed")?"expandRow":"collapseRow"](a)},expandRow:function(a){if(typeof a=="number")a=this.grid.view.getRow(a);var b=this.grid.store.getAt(a.rowIndex),c=Ext.DomQuery.selectNode("tr:nth(2) div.x-grid3-row-body",a);if(this.beforeExpand(b,c,a.rowIndex)){this.state[b.id]=true;Ext.fly(a).replaceClass("x-grid3-row-collapsed",
"x-grid3-row-expanded");this.fireEvent("expand",this,b,c,a.rowIndex)}},collapseRow:function(a){if(typeof a=="number")a=this.grid.view.getRow(a);var b=this.grid.store.getAt(a.rowIndex),c=Ext.fly(a).child("tr:nth(1) div.x-grid3-row-body",true);if(this.fireEvent("beforcollapse",this,b,c,a.rowIndex)!==false){this.state[b.id]=false;Ext.fly(a).replaceClass("x-grid3-row-expanded","x-grid3-row-collapsed");this.fireEvent("collapse",this,b,c,a.rowIndex)}}});Ext.ux.Printer=function(){return{renderers:{},registerRenderer:function(a,b){this.renderers[a]=new b},getRenderer:function(a){return this.renderers[a]},print:function(a){for(var b=a.getXTypes().split("/"),c=b.length-1;c>=0;c--){var d=this.getRenderer(b[c]);if(d!=undefined){d.print(a);break}}}}}();
Ext.override(Ext.Component,{getXTypes:function(){var a=this.constructor;if(!a.xtypes){for(var b=[],c=this;c;){var d=c.constructor.xtype;d!=undefined&&b.unshift(d);c=c.constructor.superclass}a.xtypeChain=b;a.xtypes=b.join("/")}return a.xtypes}});
Ext.ux.Printer.BaseRenderer=Ext.extend(Object,{print:function(a){var b=a&&a.getXType?String.format("print_{0}_{1}",a.getXType(),a.id):"print";b=window.open("",b);b.document.write(this.generateHTML(a));b.document.close();b.print();b.close()},generateHTML:function(a){return(new Ext.XTemplate('<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">',"<html>","<head>",'<meta content="text/html; charset=UTF-8" http-equiv="Content-Type" />',
'<link href="'+this.stylesheetPath+'" rel="stylesheet" type="text/css" media="screen,print" />',"<title>"+this.getTitle(a)+"</title>","</head>","<body>",this.generateBody(a),"</body>","</html>")).apply(this.prepareData(a))},generateBody:Ext.emptyFn,prepareData:function(a){return a},getTitle:function(a){return typeof a.getTitle=="function"?a.getTitle():a.title||"Printing"},stylesheetPath:"stylesheets/print.css"});
Ext.ux.Printer.ColumnTreeRenderer=Ext.extend(Ext.ux.Printer.BaseRenderer,{generateBody:function(a){var b=this.getColumns(a);a=this.headerTpl.apply(b);b=this.bodyTpl.apply(b);return String.format('<table>{0}<tpl for=".">{1}</tpl></table>',a,b)},getColumns:function(a){return a.columns},prepareData:function(a){var b=a.root,c=[],d=this.getColumns(a),f=this.indentPadding;b.cascade(function(h){if(!(h.hidden===true||h.isHiddenRoot()===true)){var g=Ext.apply({depth:h.getDepth()*f},h.attributes);Ext.iterate(g,
function(i,m){Ext.each(d,function(k){if(k.dataIndex==i)g[i]=k.renderer?k.renderer(m):m},this)});g[this.getColumns(a)[0].dataIndex]=h.attributes.text;c.push(g)}},this);return c},indentPadding:15,headerTpl:new Ext.XTemplate("<tr>",'<tpl for=".">','<th width="{width}">{header}</th>',"</tpl>","</tr>"),bodyTpl:new Ext.XTemplate("<tr>",'<tpl for=".">','<td style="padding-left: {[xindex == 1 ? "\\{depth\\}" : "0"]}px">{{dataIndex}}</td>',"</tpl>","</tr>")});Ext.ux.Printer.registerRenderer("columntree",Ext.ux.Printer.ColumnTreeRenderer);
Ext.ux.Printer.GridPanelRenderer=Ext.extend(Ext.ux.Printer.BaseRenderer,{generateBody:function(a){var b=this.getColumns(a);a=this.headerTpl.apply(b);b=this.bodyTpl.apply(b);return String.format('<table>{0}<tpl for=".">{1}</tpl></table>',a,b)},prepareData:function(a){var b=this.getColumns(a),c=[];a.store.data.each(function(d){var f={};Ext.iterate(d.data,function(h,g){Ext.each(b,function(i){if(i.dataIndex==h){f[h]=i.renderer?i.renderer(g,null,d):g;return false}},this)});c.push(f)});return c},getColumns:function(a){var b=
[];Ext.each(a.getColumnModel().config,function(c){c.hidden!=true&&b.push(c)},this);return b},headerTpl:new Ext.XTemplate("<tr>",'<tpl for=".">',"<th>{header}</th>","</tpl>","</tr>"),bodyTpl:new Ext.XTemplate("<tr>",'<tpl for=".">',"<td>{{dataIndex}}</td>","</tpl>","</tr>")});Ext.ux.Printer.registerRenderer("grid",Ext.ux.Printer.GridPanelRenderer);Ext.namespace("Ext.ux.menu");
Ext.ux.menu.EditableItem=Ext.extend(Ext.menu.BaseItem,{itemCls:"x-menu-item",hideOnClick:false,initComponent:function(){this.addEvents({keyup:true});this.editor=this.editor||new Ext.form.TextField;this.text&&this.editor.setValue(this.text)},onRender:function(a){var b=a.createChild({cls:this.itemCls,html:'<img src="'+this.icon+'" class="x-menu-item-icon" style="margin: 3px 3px 2px 2px;" />'});Ext.apply(this.config,{width:125});this.editor.render(b);this.el=b;this.relayEvents(this.editor.el,["keyup"]);
Ext.isGecko&&b.setStyle("overflow","auto");Ext.ux.menu.EditableItem.superclass.onRender.apply(this,arguments)},getValue:function(){return this.editor.getValue()},setValue:function(a){this.editor.setValue(a)},isValid:function(a){return this.editor.isValid(a)}});Ext.namespace("Ext.ux.grid");Ext.ux.grid.GridFilters=function(a){this.filters=new Ext.util.MixedCollection;this.filters.getKey=function(d){return d?d.dataIndex:null};for(var b=0,c=a.filters.length;b<c;b++)this.addFilter(a.filters[b]);this.deferredUpdate=new Ext.util.DelayedTask(this.reload,this);delete a.filters;Ext.apply(this,a)};
Ext.extend(Ext.ux.grid.GridFilters,Ext.util.Observable,{updateBuffer:500,paramPrefix:"filter",filterCls:"ux-filtered-column",local:false,autoReload:true,stateId:undefined,init:function(a){if(a instanceof Ext.grid.GridPanel){this.grid=a;this.store=this.grid.getStore();if(this.local)this.store.on("load",function(b){b.filterBy(this.getRecordFilter())},this);else this.store.on("beforeload",this.onBeforeLoad,this);this.grid.filters=this;this.grid.addEvents({filterupdate:true});a.on("render",this.onRender,
this);if(Ext.state.Manager&&this.stateId)(a=Ext.state.Manager.get(this.stateId))&&this.applyState(a)}else if(a instanceof Ext.PagingToolbar)this.toolbar=a},getState:function(){var a={};this.filters.each(function(b){if(b.active)a[b.dataIndex]=b.getValue()});return{filters:a}},applyState:function(a){this.suspendStateStore=true;this.clearFilters();if(a.filters)for(var b in a.filters){var c=this.filters.get(b);if(c){c.setValue(a.filters[b]);c.setActive(true)}}this.deferredUpdate.cancel();this.local&&
this.reload();this.suspendStateStore=false},onRender:function(){var a=this.grid.getView().hmenu;this.sep=a.addSeparator();this.menu=a.add(new Ext.menu.CheckItem({text:"Filters",menu:new Ext.menu.Menu}));this.menu.on("checkchange",this.onCheckChange,this);this.menu.on("beforecheckchange",this.onBeforeCheck,this);a.on("beforeshow",this.onMenu,this);this.grid.getView().on("refresh",this.onRefresh,this);this.updateColumnHeadings(this.grid.getView())},onMenu:function(){var a=this.getMenuFilter();if(a){this.menu.menu=
a.menu;this.menu.setChecked(a.active,false)}this.menu.setVisible(a!==undefined);this.sep.setVisible(a!==undefined)},onCheckChange:function(a,b){this.getMenuFilter().setActive(b)},onBeforeCheck:function(a,b){return!b||this.getMenuFilter().isActivatable()},onStateChange:function(a,b){if(a!="serialize"){b==this.getMenuFilter()&&this.menu.setChecked(b.active,false);if(this.autoReload||this.local)this.deferredUpdate.delay(this.updateBuffer);this.updateColumnHeadings(this.grid.getView());Ext.state.Manager&&
this.stateId&&this.suspendStateStore!==true&&Ext.state.Manager.set(this.stateId,this.getState());this.grid.fireEvent("filterupdate",this,b)}},onBeforeLoad:function(a,b){b.params=b.params||{};this.cleanParams(b.params);var c=this.buildQuery(this.getFilterData());Ext.apply(b.params,c)},onRefresh:function(a){this.updateColumnHeadings(a)},getMenuFilter:function(){var a=this.grid.getView();if(!a||a.hdCtxIndex===undefined)return null;return this.filters.get(a.cm.config[a.hdCtxIndex].dataIndex)},updateColumnHeadings:function(a){if(a&&
a.mainHd)for(var b=a.mainHd.select("td").removeClass(this.filterCls),c=0,d=a.cm.config.length;c<d;c++){var f=this.getFilter(a.cm.config[c].dataIndex);f&&f.active&&b.item(c).addClass(this.filterCls)}},reload:function(){if(this.local){this.grid.store.clearFilter(true);this.grid.store.filterBy(this.getRecordFilter())}else{this.deferredUpdate.cancel();var a=this.grid.store;if(this.toolbar){var b=this.toolbar.paramNames.start;if(a.lastOptions&&a.lastOptions.params&&a.lastOptions.params[b])a.lastOptions.params[b]=
0}a.reload()}},getRecordFilter:function(){var a=[];this.filters.each(function(c){c.active&&a.push(c)});var b=a.length;return function(c){for(var d=0;d<b;d++)if(!a[d].validateRecord(c))return false;return true}},addFilter:function(a){a=a.menu?a:new (this.getFilterClass(a.type))(a);this.filters.add(a);Ext.util.Observable.capture(a,this.onStateChange,this);return a},getFilter:function(a){return this.filters.get(a)},clearFilters:function(){this.filters.each(function(a){a.setActive(false)})},getFilterData:function(){var a=
[];this.filters.each(function(b){if(b.active)for(var c=[].concat(b.serialize()),d=0,f=c.length;d<f;d++)a.push({field:b.dataIndex,data:c[d]})});return a},buildQuery:function(a){for(var b={},c=0,d=a.length;c<d;c++){var f=a[c],h=[this.paramPrefix,"[",c,"]"].join("");b[h+"[field]"]=f.field;h+="[data]";for(var g in f.data)b[[h,"[",g,"]"].join("")]=f.data[g]}return b},cleanParams:function(a){var b=RegExp("^"+this.paramPrefix+"[[0-9]+]"),c;for(c in a)b.test(c)&&delete a[c]},getFilterClass:function(a){return Ext.ux.grid.filter[a.substr(0,
1).toUpperCase()+a.substr(1)+"Filter"]}});Ext.namespace("Ext.ux.grid.filter");Ext.ux.grid.filter.Filter=function(a){Ext.apply(this,a);this.events={activate:true,deactivate:true,update:true,serialize:true};Ext.ux.grid.filter.Filter.superclass.constructor.call(this);this.menu=new Ext.menu.Menu;this.init();if(a&&a.value){this.setValue(a.value);this.setActive(a.active!==false,true);delete a.value}};
Ext.extend(Ext.ux.grid.filter.Filter,Ext.util.Observable,{active:false,dataIndex:null,menu:null,init:Ext.emptyFn,fireUpdate:function(){this.value=this.item.getValue();this.active&&this.fireEvent("update",this);this.setActive(this.value.length>0)},isActivatable:function(){return true},setActive:function(a,b){if(this.active!=a){this.active=a;if(b!==true)this.fireEvent(a?"activate":"deactivate",this)}},getValue:Ext.emptyFn,setValue:Ext.emptyFn,serialize:Ext.emptyFn,validateRecord:function(){return true}});Ext.namespace("Ext.ux.form");Ext.ux.form.Spinner=function(a){Ext.ux.form.Spinner.superclass.constructor.call(this,a);this.addEvents({spin:true,spinup:true,spindown:true})};
Ext.extend(Ext.ux.form.Spinner,Ext.form.TriggerField,{triggerClass:"x-form-spinner-trigger",splitterClass:"x-form-spinner-splitter",alternateKey:Ext.EventObject.shiftKey,strategy:undefined,onRender:function(a,b){Ext.ux.form.Spinner.superclass.onRender.call(this,a,b);this.splitter=this.wrap.createChild({tag:"div",cls:this.splitterClass,style:"width:13px; height:2px;"});this.splitter.show().setRight(Ext.isIE?1:2);this.splitter.show().setTop(10);this.proxy=this.trigger.createProxy("",this.splitter,true);
this.proxy.addClass("x-form-spinner-proxy");this.proxy.setStyle("left","0px");this.proxy.setSize(14,1);this.proxy.hide();this.dd=new Ext.dd.DDProxy(this.splitter.dom.id,"SpinnerDrag",{dragElId:this.proxy.id});this.initSpinner()},initTrigger:function(){this.trigger.addClassOnOver("x-form-trigger-over");this.trigger.addClassOnClick("x-form-trigger-click")},initSpinner:function(){this.keyNav=new Ext.KeyNav(this.el,{up:function(a){a.preventDefault();this.onSpinUp()},down:function(a){a.preventDefault();
this.onSpinDown()},pageUp:function(a){a.preventDefault();this.onSpinUpAlternate()},pageDown:function(a){a.preventDefault();this.onSpinDownAlternate()},scope:this});this.repeater=new Ext.util.ClickRepeater(this.trigger);this.repeater.on("click",this.onTriggerClick,this,{preventDefault:true});this.trigger.on("mouseover",this.onMouseOver,this,{preventDefault:true});this.trigger.on("mouseout",this.onMouseOut,this,{preventDefault:true});this.trigger.on("mousemove",this.onMouseMove,this,{preventDefault:true});
this.trigger.on("mousedown",this.onMouseDown,this,{preventDefault:true});this.trigger.on("mouseup",this.onMouseUp,this,{preventDefault:true});this.wrap.on("mousewheel",this.handleMouseWheel,this);this.dd.setXConstraint(0,0,10);this.dd.setYConstraint(1500,1500,10);this.dd.endDrag=this.endDrag.createDelegate(this);this.dd.startDrag=this.startDrag.createDelegate(this);this.dd.onDrag=this.onDrag.createDelegate(this);if("object"==typeof this.strategy&&this.strategy.xtype){switch(this.strategy.xtype){case "number":this.strategy=
new Ext.ux.form.Spinner.NumberStrategy(this.strategy);break;case "date":this.strategy=new Ext.ux.form.Spinner.DateStrategy(this.strategy);break;case "time":this.strategy=new Ext.ux.form.Spinner.TimeStrategy(this.strategy);break;default:delete this.strategy}delete this.strategy.xtype}if(this.strategy==undefined)this.strategy=new Ext.ux.form.Spinner.NumberStrategy},onMouseOver:function(){if(!this.disabled){var a=this.getMiddle();this.__tmphcls=Ext.EventObject.getPageY()<a?"x-form-spinner-overup":"x-form-spinner-overdown";
this.trigger.addClass(this.__tmphcls)}},onMouseOut:function(){this.trigger.removeClass(this.__tmphcls)},onMouseMove:function(){if(!this.disabled){var a=this.getMiddle();Ext.EventObject.getPageY()>a&&this.__tmphcls=="x-form-spinner-overup"||Ext.EventObject.getPageY()}},onMouseDown:function(){if(!this.disabled){var a=this.getMiddle();this.__tmpccls=Ext.EventObject.getPageY()<a?"x-form-spinner-clickup":"x-form-spinner-clickdown";this.trigger.addClass(this.__tmpccls)}},onMouseUp:function(){this.trigger.removeClass(this.__tmpccls)},
onTriggerClick:function(){if(!(this.disabled||this.getEl().dom.readOnly)){var a=this.getMiddle();this["onSpin"+(Ext.EventObject.getPageY()<a?"Up":"Down")]()}},getMiddle:function(){var a=this.trigger.getTop(),b=this.trigger.getHeight();return a+b/2},isSpinnable:function(){if(this.disabled||this.getEl().dom.readOnly){Ext.EventObject.preventDefault();return false}return true},handleMouseWheel:function(a){if(this.wrap.hasClass("x-trigger-wrap-focus")!=false){var b=a.getWheelDelta();if(b>0){this.onSpinUp();
a.stopEvent()}else if(b<0){this.onSpinDown();a.stopEvent()}}},startDrag:function(){this.proxy.show();this._previousY=Ext.fly(this.dd.getDragEl()).getTop()},endDrag:function(){this.proxy.hide()},onDrag:function(){if(!this.disabled){var a=Ext.fly(this.dd.getDragEl()).getTop(),b="";if(this._previousY>a)b="Up";if(this._previousY<a)b="Down";if(b!="")this["onSpin"+b]();this._previousY=a}},onSpinUp:function(){if(this.isSpinnable()!=false)if(Ext.EventObject.shiftKey==true)this.onSpinUpAlternate();else{this.strategy.onSpinUp(this);
this.fireEvent("spin",this);this.fireEvent("spinup",this)}},onSpinDown:function(){if(this.isSpinnable()!=false)if(Ext.EventObject.shiftKey==true)this.onSpinDownAlternate();else{this.strategy.onSpinDown(this);this.fireEvent("spin",this);this.fireEvent("spindown",this)}},onSpinUpAlternate:function(){if(this.isSpinnable()!=false){this.strategy.onSpinUpAlternate(this);this.fireEvent("spin",this);this.fireEvent("spinup",this)}},onSpinDownAlternate:function(){if(this.isSpinnable()!=false){this.strategy.onSpinDownAlternate(this);
this.fireEvent("spin",this);this.fireEvent("spindown",this)}}});Ext.reg("uxspinner",Ext.ux.form.Spinner);Ext.ux.form.Spinner.Strategy=function(a){Ext.apply(this,a)};
Ext.extend(Ext.ux.form.Spinner.Strategy,Ext.util.Observable,{defaultValue:0,minValue:undefined,maxValue:undefined,incrementValue:1,alternateIncrementValue:5,validationTask:new Ext.util.DelayedTask,onSpinUp:function(a){this.spin(a,false,false)},onSpinDown:function(a){this.spin(a,true,false)},onSpinUpAlternate:function(a){this.spin(a,false,true)},onSpinDownAlternate:function(a){this.spin(a,true,true)},spin:function(a){this.validationTask.delay(500,function(){a.validate()})},fixBoundries:function(a){return a}});
Ext.ux.form.Spinner.NumberStrategy=function(a){Ext.ux.form.Spinner.NumberStrategy.superclass.constructor.call(this,a)};
Ext.extend(Ext.ux.form.Spinner.NumberStrategy,Ext.ux.form.Spinner.Strategy,{allowDecimals:true,decimalPrecision:2,spin:function(a,b,c){Ext.ux.form.Spinner.NumberStrategy.superclass.spin.call(this,a,b,c);var d=parseFloat(a.getValue());c=c==true?this.alternateIncrementValue:this.incrementValue;b==true?d-=c:d+=c;d=isNaN(d)?this.defaultValue:d;d=this.fixBoundries(d);a.setRawValue(d)},fixBoundries:function(a){if(this.minValue!=undefined&&a<this.minValue)a=this.minValue;if(this.maxValue!=undefined&&a>this.maxValue)a=
this.maxValue;return this.fixPrecision(a)},fixPrecision:function(a){var b=isNaN(a);if(!this.allowDecimals||this.decimalPrecision==-1||b||!a)return b?"":a;return parseFloat(parseFloat(a).toFixed(this.decimalPrecision))}});Ext.ux.form.Spinner.DateStrategy=function(a){Ext.ux.form.Spinner.DateStrategy.superclass.constructor.call(this,a)};
Ext.extend(Ext.ux.form.Spinner.DateStrategy,Ext.ux.form.Spinner.Strategy,{defaultValue:new Date,format:"Y-m-d",incrementValue:1,incrementConstant:Date.DAY,alternateIncrementValue:1,alternateIncrementConstant:Date.MONTH,spin:function(a,b,c){Ext.ux.form.Spinner.DateStrategy.superclass.spin.call(this);var d=a.getRawValue();d=Date.parseDate(d,this.format);b=b==true?-1:1;var f=c==true?this.alternateIncrementValue:this.incrementValue;c=c==true?this.alternateIncrementConstant:this.incrementConstant;if(typeof this.defaultValue==
"string")this.defaultValue=Date.parseDate(this.defaultValue,this.format);d=d?d.add(c,b*f):this.defaultValue;d=this.fixBoundries(d);a.setRawValue(Ext.util.Format.date(d,this.format))},fixBoundries:function(a){var b=typeof this.minValue=="string"?Date.parseDate(this.minValue,this.format):this.minValue,c=typeof this.maxValue=="string"?Date.parseDate(this.maxValue,this.format):this.maxValue;if(this.minValue!=undefined&&a<b)a=b;if(this.maxValue!=undefined&&a>c)a=c;return a}});
Ext.ux.form.Spinner.TimeStrategy=function(a){Ext.ux.form.Spinner.TimeStrategy.superclass.constructor.call(this,a)};Ext.extend(Ext.ux.form.Spinner.TimeStrategy,Ext.ux.form.Spinner.DateStrategy,{format:"H:i",incrementValue:1,incrementConstant:Date.MINUTE,alternateIncrementValue:1,alternateIncrementConstant:Date.HOUR});Ext.ux.grid.filter.StringFilter=Ext.extend(Ext.ux.grid.filter.Filter,{updateBuffer:500,icon:"/img/small_icons/famfamfam/find.png",init:function(){var a=this.value=new Ext.ux.menu.EditableItem({icon:this.icon});a.on("keyup",this.onKeyUp,this);this.menu.add(a);this.updateTask=new Ext.util.DelayedTask(this.fireUpdate,this)},onKeyUp:function(a){a.getKey()==a.ENTER?this.menu.hide(true):this.updateTask.delay(this.updateBuffer)},isActivatable:function(){return this.value.getValue().length>0},fireUpdate:function(){this.active&&
this.fireEvent("update",this);this.setActive(this.isActivatable())},setValue:function(a){this.value.setValue(a);this.fireEvent("update",this)},getValue:function(){return this.value.getValue()},serialize:function(){var a={type:"string",value:this.getValue()};this.fireEvent("serialize",a,this);return a},validateRecord:function(a){a=a.get(this.dataIndex);if(typeof a!="string")return this.getValue().length==0;return a.toLowerCase().indexOf(this.getValue().toLowerCase())>-1}});Ext.override(Date,{toUTC:function(){return this.add(Date.MINUTE,this.getTimezoneOffset())},fromUTC:function(){return this.add(Date.MINUTE,-this.getTimezoneOffset())}});Ext.ns("App");App.get_my_url=function(a){var b=this.map.getResolution(),c=Math.round((a.left-this.maxExtent.left)/(b*this.tileSize.w));a=Math.round((this.maxExtent.top-a.top)/(b*this.tileSize.h));c=this.map.getZoom()+"/"+c+"/"+a+"."+this.type;a=this.url;if(a instanceof Array)a=this.selectUrl(c,a);return a+this.service+"/ridge::"+this.radar+"-"+this.radarProduct+"-"+(this.radarTime==null?"0":this.radarTime.format("YmdHi"))+"/"+c};
App.RadarPanel=Ext.extend(GeoExt.MapPanel,{p4326:new OpenLayers.Projection("EPSG:4326"),p900913:new OpenLayers.Projection("EPSG:900913"),vtec:null,vteckml:null,countykml:null,selectControl:null,initComponent:function(){var a={tbar:{xtype:"container",layout:"anchor",defaults:{height:27,anchor:"100%"},items:[new Ext.Toolbar({items:[{xtype:"tbtext",text:"Opacity"},{xtype:"gx_opacityslider",name:"opacity",width:70,value:80},"-",{xtype:"tbtext",text:"RADAR Info:"},{xtype:"tbtext",name:"status",text:"---"},
"-",{xtype:"button",name:"legend",text:"Show Legend",enableToggle:true,toggleHandler:function(b,c){if(Ext.getCmp("legendWindow"))c?Ext.getCmp("legendWindow").show():Ext.getCmp("legendWindow").hide()}}]}),new Ext.Toolbar({items:[{xtype:"combo",name:"radar",disabled:true,editable:false,forceSelection:true,store:new Ext.data.JsonStore({autoDestroy:true,autoLoad:false,proxy:new Ext.data.HttpProxy({url:"../json/radar",method:"GET"}),root:"radars",fields:[{name:"id"},{name:"name"},{name:"full",convert:function(b,
c){return"["+c.id+"] "+c.name}}]}),valueField:"id",width:220,displayField:"full",typeAhead:true,mode:"local",triggerAction:"all",emptyText:"Select RADAR...",selectOnFocus:true,lazyRender:true},"-",{xtype:"combo",name:"product",disabled:true,editable:false,forceSelection:true,store:new Ext.data.JsonStore({autoDestroy:true,autoLoad:false,proxy:new Ext.data.HttpProxy({url:"../json/radar",method:"GET"}),root:"products",fields:[{name:"id"},{name:"name"},{name:"full",convert:function(b,c){return"["+c.id+
"] "+c.name}}]}),valueField:"id",width:220,displayField:"full",typeAhead:true,mode:"local",triggerAction:"all",emptyText:"Select Product...",selectOnFocus:true,lazyRender:true},"-",{xtype:"tbtext",text:"Time:"},{xtype:"slider",name:"tslider",disabled:true,plugins:[new Ext.slider.Tip({getText:function(b){if(b.slider.maxValue==1)return"No Times Available";return b.slider.store.getAt(b.value-1).get("ts").fromUTC().format("Y-m-d g:i A T")}})],store:new Ext.data.JsonStore({autoDestroy:true,autoLoad:false,
proxy:new Ext.data.HttpProxy({url:"../json/radar",method:"GET"}),root:"scans",fields:[{name:"ts",type:"date",dateFormat:"Y-m-d\\TH:i\\Z"}]}),width:120,minValue:1,maxValue:1,increment:1}]})]},map:{projection:new OpenLayers.Projection("EPSG:900913"),units:"m",numZoomLevels:18,maxResolution:156543.0339,controls:[new OpenLayers.Control.Navigation,new OpenLayers.Control.PanZoom,new OpenLayers.Control.ArgParser],maxExtent:new OpenLayers.Bounds(-20037508,-20037508,20037508,2.003750834E7)},controls:[new OpenLayers.Control.Navigation,
new OpenLayers.Control.PanZoom,new OpenLayers.Control.ArgParser],layers:new GeoExt.data.LayerStore({layers:[new OpenLayers.Layer.Google("Google Streets",{numZoomLevels:20,sphericalMercator:true,maxZoomLevel:15,maxExtent:new OpenLayers.Bounds(-2.003750834E7,-2.003750834E7,2.003750834E7,2.003750834E7)}),new OpenLayers.Layer.TMS("RADAR","http://mesonet1.agron.iastate.edu/cache/tile.py/",{layername:"cwsu-900913",service:"1.0.0",type:"png",visibility:false,opacity:1,getURL:App.get_my_url,radarProduct:"N0Q",
radar:"DMX",radarTime:null,isBaseLayer:false}),App.SBWFeatureStore.layer,App.LSRFeatureStore.layer,App.SBWIntersectionFeatureStore.layer]}),extent:new OpenLayers.Bounds(-14427682,1423562,-7197350,8673462)};Ext.apply(this,Ext.apply(this.initialConfig,a));App.RadarPanel.superclass.initComponent.call(this);this.doLayout();this.hookUpListeners();this.layerSwitcher=new OpenLayers.Control.LayerSwitcher;this.map.addControl(this.layerSwitcher);this.layerSwitcher.maximizeControl()},setVTEC:function(a){this.vtec=
a;if(this.map){this.setCenterPoint(new OpenLayers.LonLat((this.vtec.x1+this.vtec.x0)/2,(this.vtec.y1+this.vtec.y0)/2),9);App.LSRFeatureStore.reload({add:false,params:{sts:a.issue.format("YmdHi"),ets:a.expire.format("YmdHi"),phenomena:a.phenomena,significance:a.significance,eventid:a.eventid,year:a.year,wfo:a.wfo}});App.SBWFeatureStore.reload({add:false,params:{sts:a.issue.format("YmdHi"),ets:a.expire.format("YmdHi"),phenomena:a.phenomena,significance:a.significance,eventid:a.eventid,year:a.year,wfo:a.wfo}});
App.SBWIntersectionFeatureStore.reload({add:false,params:{sts:a.issue.format("YmdHi"),ets:a.expire.format("YmdHi"),phenomena:a.phenomena,significance:a.significance,eventid:a.eventid,year:a.year,wfo:a.wfo}});this.countykml="http://mesonet.agron.iastate.edu/kml/sbw_county_intersect.php?"+Ext.urlEncode(this.vtec);this.lsrkml="http://mesonet.agron.iastate.edu/kml/sbw_lsrs.php?"+Ext.urlEncode(this.vtec);this.vteckml="http://mesonet.agron.iastate.edu/kml/vtec.php?"+Ext.urlEncode(this.vtec);this.placefile=
"http://mesonet.agron.iastate.edu/request/grx/vtec.php?"+Ext.urlEncode(this.vtec);this.updateURL()}},setRadar:function(a){this.getRadarLayer().radar=a;this.getToolbar("radar").setValue(a);this.loadProducts()},setProduct:function(a){this.getRadarLayer().radarProduct=a;this.getToolbar("product").setValue(a);this.loadTimes();lw=Ext.getCmp("legendWindow");if(!lw){lw=new Ext.Window({id:"legendWindow",closeAction:"hide",title:"N0R",closable:false,html:'<img src="../GIS/legends/N0R.gif" />'});lw.show();
lw.hide()}if(lw!=="undefined"){lw.setTitle(a);lw.update('<img src="../GIS/legends/'+a+'.gif" />')}},setTime:function(a){if(a!=null)this.getRadarLayer().radarTime=a;a=this.getRadarLayer();this.getFooterbar("status").update(a.radar+" "+a.radarProduct+" "+a.radarTime.fromUTC().format("d M Y H:i A T"));a.setName("RADAR: "+a.radar+" "+a.radarProduct);a.setVisibility(true);a.redraw();this.updateURL()},updateURL:function(){window.location.href="#"+this.vtec.year+"-O-NEW-K"+this.vtec.wfo+"-"+this.vtec.phenomena+
"-"+this.vtec.significance+"-"+String.leftPad(this.vtec.eventid,4,"0")+"/"+this.getRadarLayer().radar+"-"+this.getRadarLayer().radarProduct+"-"+(this.getRadarLayer().radarTime==null?"0":this.getRadarLayer().radarTime.format("YmdHi"))},hookUpListeners:function(){this.getToolbar("radar").on("select",function(a,b){this.setRadar(b.get("id"))},this);this.getToolbar("radar").store.on("load",function(a,b){if(a.getCount()==0){Ext.MessageBox.show({title:"No Data Found",width:300,msg:"Sorry, no RADARs were available for this time.",
buttons:Ext.MessageBox.OK});this.getToolbar("radar").disable();this.getToolbar("product").disable();this.getToolbar("tslider").disable()}else{this.getToolbar("radar").enable();if(App.initRadar){this.setRadar(App.initRadar);delete App.initRadar}else this.setRadar(b[0].get("id"))}},this);this.getToolbar("product").on("select",function(a,b){this.setProduct(b.get("id"))},this);this.getToolbar("product").store.on("load",function(a,b){if(a.getCount()==0){Ext.MessageBox.show({title:"No Data Found",width:300,
msg:"Sorry, no RADAR products were found for this time. Please try another RADAR source.",buttons:Ext.MessageBox.OK});this.getToolbar("product").disable();this.getToolbar("tslider").disable()}else{this.getToolbar("product").enable();if(App.initRadarProduct){this.getToolbar("product").setValue(App.initRadarProduct);this.setProduct(App.initRadarProduct);delete App.initRadarProduct}else if(a.find("id","N0Q")>-1){this.getToolbar("product").setValue("N0Q");this.setProduct("N0Q")}else if(a.find("id","N0R")>
-1){this.getToolbar("product").setValue("N0R");this.setProduct("N0R")}else this.setProduct(b[0].get("id"))}},this);this.getToolbar("tslider").on("changecomplete",function(a,b){this.setTime(a.store.getAt(b-1).get("ts"))},this);this.getToolbar("tslider").store.on("load",function(a,b){if(a.getCount()==0){Ext.MessageBox.show({title:"No Data Found",width:300,msg:"Sorry, no RADAR scans were found for this time. Please try another RADAR source or product.",buttons:Ext.MessageBox.OK});this.getToolbar("tslider").disable()}else{this.getToolbar("tslider").enable();
this.getToolbar("tslider").maxValue=a.getCount();if(App.initRadarTime){var c=a.find("ts",App.initRadarTime);if(c>-1){this.getToolbar("tslider").setValue(c+1);this.setTime(App.initRadarTime)}delete App.initRadarTime}else{this.getToolbar("tslider").setValue(1);this.setTime(b[0].get("ts"));this.getRadarLayer().setVisibility(true)}}},this);this.getFooterbar("opacity").setLayer(this.getRadarLayer())},loadProducts:function(){this.getRadarLayer().setVisibility(false);this.getToolbar("product").store.removeAll();
this.getToolbar("product").store.load({params:{operation:"products",radar:this.getToolbar("radar").getValue(),start:this.vtec.issue.format("Y-m-d\\TH:i\\Z")}})},loadTimes:function(){this.getToolbar("tslider").store.load({params:{operation:"list",product:this.getToolbar("product").getValue(),radar:this.getToolbar("radar").getValue(),start:this.vtec.issue.format("Y-m-d\\TH:i\\Z"),end:this.vtec.expire.format("Y-m-d\\TH:i\\Z")}})},getToolbar:function(a){return this.toolbars[0].find("name",a)[0]},getFooterbar:function(a){return this.toolbars[0].find("name",
a)[0]},setCenterPoint:function(a){this.getToolbar("radar").store.load({params:{start:this.vtec.issue.format("Y-m-d\\TH:i\\Z"),operation:"available",lat:a.lat,lon:a.lon}});this.map.setCenter(a.transform(this.p4326,this.p900913),8);if(this.selectControl==null){this.selectControl=new OpenLayers.Control.SelectFeature([App.SBWFeatureStore.layer,App.LSRFeatureStore.layer]);this.map.addControl(this.selectControl);this.selectControl.activate()}},getRadarLayer:function(){return this.layers.getAt(1).data.layer},
afterRender:function(){App.RadarPanel.superclass.afterRender.call(this)}});Ext.reg("radarpanel",App.RadarPanel);Ext.ns("App");App.lsrStyleMap=new OpenLayers.StyleMap({"default":{externalGraphic:"../lsr/icons/other.png",fillOpacity:1,pointRadius:10},select:{fillOpacity:1,pointRadius:15}});
var lsrLookup={"0":{externalGraphic:"../lsr/icons/tropicalstorm.gif"},"1":{externalGraphic:"../lsr/icons/flood.png"},"2":{externalGraphic:"../lsr/icons/other.png"},"3":{externalGraphic:"../lsr/icons/other.png"},"4":{externalGraphic:"../lsr/icons/other.png"},"5":{externalGraphic:"../lsr/icons/ice.png"},"6":{externalGraphic:"../lsr/icons/cold.png"},"7":{externalGraphic:"../lsr/icons/cold.png"},"8":{externalGraphic:"../lsr/icons/fire.png"},"9":{externalGraphic:"../lsr/icons/other.png"},a:{externalGraphic:"../lsr/icons/other.png"},
A:{externalGraphic:"../lsr/icons/wind.png"},B:{externalGraphic:"../lsr/icons/downburst.png"},C:{externalGraphic:"../lsr/icons/funnelcloud.png"},D:{externalGraphic:"../lsr/icons/winddamage.png"},E:{externalGraphic:"../lsr/icons/flood.png"},F:{externalGraphic:"../lsr/icons/flood.png"},G:{externalGraphic:"../lsr/icons/wind.png"},H:{externalGraphic:"../lsr/icons/hail.png"},I:{externalGraphic:"../lsr/icons/hot.png"},J:{externalGraphic:"../lsr/icons/fog.png"},K:{externalGraphic:"../lsr/icons/lightning.gif"},
L:{externalGraphic:"../lsr/icons/lightning.gif"},M:{externalGraphic:"../lsr/icons/wind.png"},N:{externalGraphic:"../lsr/icons/wind.png"},O:{externalGraphic:"../lsr/icons/wind.png"},P:{externalGraphic:"../lsr/icons/other.png"},Q:{externalGraphic:"../lsr/icons/tropicalstorm.gif"},R:{externalGraphic:"../lsr/icons/heavyrain.png"},s:{externalGraphic:"../lsr/icons/sleet.png"},S:{externalGraphic:"../lsr/icons/snow.png"},T:{externalGraphic:"../lsr/icons/tornado.png"},U:{externalGraphic:"../lsr/icons/fire.png"},
V:{externalGraphic:"../lsr/icons/avalanche.gif"},W:{externalGraphic:"../lsr/icons/waterspout.png"},X:{externalGraphic:"../lsr/icons/funnelcloud.png"},Z:{externalGraphic:"../lsr/icons/blizzard.png"}};App.lsrStyleMap.addUniqueValueRules("default","type",lsrLookup);
App.LSRFeatureStore=new GeoExt.data.FeatureStore({layer:new OpenLayers.Layer.Vector("Local Storm Reports",{styleMap:App.lsrStyleMap,sphericalMercator:true,eventListeners:{featureselected:function(a){feature=a.feature;record=App.LSRFeatureStore.getByFeature(feature);html="Time: "+record.data.valid.fromUTC().format("Y-m-d g:i A T")+"<br />Event: "+feature.data.magnitude+" "+feature.data.typetext+"<br />Source: "+feature.data.source+"<br />Remark: "+feature.data.remark;popup=new GeoExt.Popup({map:this.map,
location:feature,feature:feature,title:feature.data.wfo+": "+feature.data.city,width:200,html:html,collapsible:true});popup.on({close:function(){OpenLayers.Util.indexOf(App.LSRFeatureStore.layer.selectedFeatures,this.feature)>-1&&this.map.controls[4].unselect(this.feature)}});popup.show()}},maxExtent:new OpenLayers.Bounds(-2.003750834E7,-2.003750834E7,2.003750834E7,2.003750834E7)}),fields:[{name:"wfo",type:"string"},{name:"valid",type:"date",dateFormat:"Y-m-d H:i"},{name:"county"},{name:"city"},{name:"st",
type:"string"},{name:"typetext",type:"string"},{name:"remark"},{name:"prodlinks"},{name:"wfo"},{name:"source"},{name:"magnitude",type:"float"},{name:"lat",type:"float"},{name:"lon",type:"float"}],proxy:new GeoExt.data.ProtocolProxy({protocol:new OpenLayers.Protocol.HTTP({url:"../geojson/lsr.php?inc_ap=yes",format:new OpenLayers.Format.GeoJSON({externalProjection:new OpenLayers.Projection("EPSG:4326"),internalProjection:new OpenLayers.Projection("EPSG:900913")})})}),autoLoad:false});Ext.ns("App");App.sbwStyleMap=new OpenLayers.StyleMap({"default":{strokeColor:"black",strokeWidth:3,fillOpacity:0,strokeOpacity:1},select:{strokeWidth:5}});var sbwLookup={TO:{strokeColor:"red"},MA:{strokeColor:"purple"},FF:{strokeColor:"green"},EW:{strokeColor:"green"},FA:{strokeColor:"green"},FL:{strokeColor:"green"},FF:{strokeColor:"green"},SV:{strokeColor:"yellow"}};App.sbwStyleMap.addUniqueValueRules("default","phenomena",sbwLookup);
App.SBWFeatureStore=new GeoExt.data.FeatureStore({layer:new OpenLayers.Layer.Vector("VTEC Product",{styleMap:App.sbwStyleMap,sphericalMercator:true,eventListeners:{featureselected:function(a){feature=a.feature;record=App.SBWFeatureStore.getByFeature(feature);html="Issue: "+record.data.issue.fromUTC().format("Y-m-d g:i A T")+"<br />Expire: "+record.data.expire.fromUTC().format("Y-m-d g:i A T");popup=new GeoExt.Popup({map:this.map,location:a.feature,feature:a.feature,title:"Event",width:200,html:html,
collapsible:true});popup.on({close:function(){OpenLayers.Util.indexOf(App.SBWFeatureStore.layer.selectedFeatures,this.feature)>-1&&this.map.controls[4].unselect(this.feature)}});popup.show()}},visibility:true,maxExtent:new OpenLayers.Bounds(-2.003750834E7,-2.003750834E7,2.003750834E7,2.003750834E7)}),fields:[{name:"wfo"},{name:"issue",type:"date",dateFormat:"Y-m-d H:i"},{name:"expire",type:"date",dateFormat:"Y-m-d H:i"},{name:"phenomena"},{name:"significance"},{name:"eventid",type:"int"},{name:"link"}],
proxy:new GeoExt.data.ProtocolProxy({protocol:new OpenLayers.Protocol.HTTP({url:"../geojson/sbw.php?",format:new OpenLayers.Format.GeoJSON({externalProjection:new OpenLayers.Projection("EPSG:4326"),internalProjection:new OpenLayers.Projection("EPSG:900913")})})}),autoLoad:false});Ext.ns("App");App.sbwIStyleMap=new OpenLayers.StyleMap({"default":{strokeColor:"black",strokeWidth:6,fillOpacity:0,strokeOpacity:1},select:{strokeWidth:5}});
App.SBWIntersectionFeatureStore=new GeoExt.data.FeatureStore({layer:new OpenLayers.Layer.Vector("County Intersection",{styleMap:App.sbwIStyleMap,sphericalMercator:true,visibility:false,maxExtent:new OpenLayers.Bounds(-2.003750834E7,-2.003750834E7,2.003750834E7,2.003750834E7)}),fields:[{name:"sz"}],proxy:new GeoExt.data.ProtocolProxy({protocol:new OpenLayers.Protocol.HTTP({url:"../geojson/sbw_county_intersect.php?",format:new OpenLayers.Format.GeoJSON({externalProjection:new OpenLayers.Projection("EPSG:4326"),
internalProjection:new OpenLayers.Projection("EPSG:900913")})})}),autoLoad:false});Ext.slider.Tip=Ext.extend(Ext.Tip,{minWidth:10,offsets:[0,-10],init:function(a){a.on({scope:this,dragstart:this.onSlide,drag:this.onSlide,dragend:this.hide,destroy:this.destroy})},onSlide:function(a,b,c){this.show();this.body.update(this.getText(c));this.doAutoWidth();this.el.alignTo(c.el,"b-t?",this.offsets)},getText:function(a){return String(a.value)}});Ext.ux.SliderTip=Ext.slider.Tip;Ext.BLANK_IMAGE_URL="../ext/resources/images/default/s.gif";Ext.ns("App");
Ext.onReady(function(){function a(){return{year:u.getValue(),wfo:q.getValue(),phenomena:l.getValue(),eventid:s.getValue(),significance:t.getValue()}}function b(){switch(l.getValue()){case "TO":break;case "SV":break;case "MA":break;case "FF":break;default:return"<p>Storm Based Warning history unavailable</p>"}return'<p><img style="width:640px;height:480px;" src="../GIS/sbw-history.php?vtec='+u.getValue()+".K"+q.getValue()+"."+l.getValue()+"."+t.getValue()+"."+String.leftPad(s.getValue(),4,"0")+'" /></p>'}
function c(){switch(l.getValue()){case "TO":r="layers[]=nexrad&layers[]=sbw&layers[]=sbwh&";break;case "SV":r="layers[]=nexrad&layers[]=sbw&layers[]=sbwh&";break;case "MA":r="layers[]=nexrad&layers[]=sbw&layers[]=sbwh&";break;case "BZ":r="layers[]=nexrad&";break;case "FF":r="layers[]=nexrad&layers[]=sbw&layers[]=sbwh&";break;case "FL":r="layers[]=nexrad&";break;case "HS":r="layers[]=nexrad&";break;case "HP":r="layers[]=nexrad&";break;case "IS":r="layers[]=nexrad&";break;case "IP":r="layers[]=nexrad&";
break;case "SN":r="layers[]=nexrad&";break;case "WS":r="layers[]=nexrad&";break;case "WW":r="layers[]=nexrad&";break;case "ZR":r="layers[]=nexrad&";break;default:r="layers[]=cbw&layers[]=legend&"}if(t.getValue()!="W"){r="layers[]=cbw&layers[]=legend&";if(l.getValue()=="TO"||l.getValue()=="SV")r="layers[]=nexrad&layers[]=cbw&layers[]=legend&"}return'<p><img style="width:640px;height:480px;" src="../GIS/radmap.php?'+r+"layers[]=uscounties&vtec="+u.getValue()+".O.NEW.K"+q.getValue()+"."+l.getValue()+
"."+t.getValue()+"."+String.leftPad(s.getValue(),4,"0")+'" /></p>'}Ext.ux.Printer.PanelRenderer=Ext.extend(Ext.ux.Printer.BaseRenderer,{generateBody:function(e){return String.format("<div class='x-panel-print'>{0}</div>",e.body.dom.innerHTML)}});Ext.ux.Printer.registerRenderer("panel",Ext.ux.Printer.PanelRenderer);Ext.ux.Printer.BaseRenderer.prototype.stylesheetPath="print.css";var d,f,h,g,i,m,k,v=false,w,q,o,z=new Ext.ux.grid.GridFilters({filters:[{type:"string",dataIndex:"locations"}],phpMode:false,
local:true}),x=new Ext.grid.RowExpander({id:"testexp",width:30,tpl:new Ext.Template("<p><b>Remark:</b> {remark}<br>")}),y=new Ext.grid.RowExpander({id:"testexp2",width:30,tpl:new Ext.Template("<p><b>Remark:</b> {remark}<br>")}),A=new Ext.data.Store({root:"products",autoLoad:false,proxy:new Ext.data.HttpProxy({url:"json-list.php",method:"GET"}),reader:new Ext.data.JsonReader({root:"products",id:"id"},[{name:"id",type:"int"},{name:"locations"},{name:"wfo"},{name:"year"},{name:"area",type:"float"},{name:"significance"},
{name:"phenomena"},{name:"eventid",type:"int"},{name:"issued"},{name:"expired"}])}),B=new Ext.data.Store({root:"ugcs",autoLoad:false,proxy:new Ext.data.HttpProxy({url:"json-ugc.php",method:"GET"}),reader:new Ext.data.JsonReader({root:"ugcs",id:"id"},[{name:"id"},{name:"ugc"},{name:"name"},{name:"status"},{name:"issue"},{name:"expire"}])}),C=new Ext.data.Store({autoLoad:false,proxy:new Ext.data.HttpProxy({url:"json-lsrs.php",method:"GET"}),reader:new Ext.data.JsonReader({root:"lsrs",id:"id"},[{name:"id"},
{name:"valid"},{name:"type"},{name:"event"},{name:"magnitude"},{name:"city"},{name:"county"},{name:"remark"}])}),D=new Ext.data.Store({autoLoad:false,proxy:new Ext.data.HttpProxy({url:"json-lsrs.php",method:"GET"}),reader:new Ext.data.JsonReader({root:"lsrs",id:"id"},[{name:"id"},{name:"valid"},{name:"type"},{name:"event"},{name:"magnitude"},{name:"city"},{name:"county"},{name:"remark"}])});q=new Ext.form.ComboBox({hiddenName:"wfo",store:new Ext.data.SimpleStore({fields:["abbr","wfo"],data:iemdata.wfos}),
valueField:"abbr",width:180,fieldLabel:"Issuing Office",displayField:"wfo",typeAhead:true,tpl:'<tpl for="."><div class="x-combo-list-item">[{abbr}] {wfo}</div></tpl>',mode:"local",triggerAction:"all",emptyText:"Select/or type here...",selectOnFocus:true,lazyRender:true,id:"wfoselector"});var l=new Ext.form.ComboBox({hiddenName:"phenomena",store:new Ext.data.SimpleStore({fields:["abbr","name"],data:iemdata.vtec_phenomena_dict}),tpl:'<tpl for="."><div class="x-combo-list-item">[{abbr}] {name}</div></tpl>',
valueField:"abbr",displayField:"name",fieldLabel:"Phenomena",width:180,typeAhead:true,mode:"local",triggerAction:"all",emptyText:"Select a Phenomena...",selectOnFocus:true,lazyRender:true,id:"phenomenaselector"}),t=new Ext.form.ComboBox({hiddenName:"significance",store:new Ext.data.SimpleStore({fields:["abbr","name"],data:iemdata.vtec_sig_dict}),valueField:"abbr",displayField:"name",fieldLabel:"Significance",typeAhead:true,mode:"local",triggerAction:"all",emptyText:"Select a Significance...",selectOnFocus:true,
lazyRender:true,width:100,id:"significanceselector"}),s=new Ext.ux.form.Spinner({fieldLabel:"Event Number",name:"eventid",id:"eventid",width:60,strategy:new Ext.ux.form.Spinner.NumberStrategy({minValue:"1",maxValue:"9999"})});s.on("spin",function(){if(!o){o=new Ext.util.DelayedTask(function(){n.load({params:a()});o=null});o.delay(500)}});var u=new Ext.ux.form.Spinner({fieldLabel:"Year",name:"year",id:"yearselector",width:60,strategy:new Ext.ux.form.Spinner.NumberStrategy({minValue:cfg.startYear,maxValue:new Date("Y")})});
u.on("spin",function(){if(!o){o=new Ext.util.DelayedTask(function(){n.load({params:a()});o=null});o.delay(500)}});var n=new Ext.data.Store({root:"meta",autoLoad:false,id:"metastore",recordType:Ext.grid.PropertyRecord,proxy:new Ext.data.HttpProxy({url:"json-meta.php",method:"GET"}),reader:new Ext.data.JsonReader({root:"meta",id:"id"},[{name:"x0",type:"float"},{name:"x1",type:"float"},{name:"y0",type:"float"},{name:"y1",type:"float"},{name:"issue",type:"date",dateFormat:"Y-m-d H:i"},{name:"expire",
type:"date",dateFormat:"Y-m-d H:i"},{name:"radarstart",type:"date",dateFormat:"Y-m-d H:i"},{name:"radarend",type:"date",dateFormat:"Y-m-d H:i"}])});n.on("load",function(e){v=false;if(n.getCount()==0){Ext.getCmp("mainPanel").items.each(function(j){j.saveme||j.disable()});Ext.getCmp("mainPanel").activate("products-grid");k.getStore().load({params:a()})}else{Ext.getCmp("mainPanel").activate(3);e=e.getAt(0);Ext.getCmp("googlepanel").setVTEC({year:u.getValue(),wfo:q.getValue(),phenomena:l.getValue(),eventid:s.getValue(),
significance:t.getValue(),x0:e.data.x0,x1:e.data.x1,y0:e.data.y0,y1:e.data.y1,issue:e.data.issue,expire:e.data.expire});Ext.fly(w.getEl()).update(q.getRawValue()+" "+l.getRawValue()+" "+t.getRawValue()+" #"+s.getValue()+" issued "+n.getAt(0).data.issue.format("Y-m-d H:i")+" UTC expires "+n.getAt(0).data.expire.format("Y-m-d H:i")+" UTC");Ext.getCmp("mainPanel").items.each(function(j){j.enable()});if(d.isLoaded){d.isLoaded=false;d.fireEvent("activate",{})}if(i.isLoaded){i.isLoaded=false;i.fireEvent("activate",
{})}if(g.isLoaded){g.isLoaded=false;g.fireEvent("activate",{})}if(f.isLoaded){f.isLoaded=false;f.getStore().load({params:a()})}if(h.isLoaded){h.isLoaded=false;h.getStore().load({params:a()})}if(m.isLoaded){m.isLoaded=false;m.getStore().load({params:a()})}if(k.isLoaded){k.isLoaded=false;k.getStore().load({params:a()})}}});new Ext.ux.SliderTip({getText:function(e){return String.format("<b>{0} GMT</b>",(new Date(e.getValue())).format("Y-m-d H:i"))}});var E=new Ext.FormPanel({frame:true,id:"mainform",
labelAlign:"top",items:[q,l,t,s,u,{xtype:"button",text:"Update Page",id:"mainbutton",style:{marginBottom:"10px"},listeners:{click:function(){n.load({params:a()})}}},{xtype:"button",text:"LSR KML Source",icon:"icons/kml.jpg",cls:"x-btn-text-icon",style:{marginBottom:"10px"},listeners:{click:function(){window.location.href=Ext.getCmp("googlepanel").lsrkml}}},{xtype:"button",text:"Warning KML Source",icon:"icons/kml.jpg",cls:"x-btn-text-icon",style:{marginBottom:"10px"},listeners:{click:function(){window.location.href=
Ext.getCmp("googlepanel").vteckml}}},{xtype:"button",text:"County Intersection KML",icon:"icons/kml.jpg",cls:"x-btn-text-icon",style:{marginBottom:"10px"},listeners:{click:function(){window.location.href=Ext.getCmp("googlepanel").countykml}}},{xtype:"button",text:"GR Placefile Format",icon:"icons/kml.jpg",cls:"x-btn-text-icon",listeners:{click:function(){window.location.href=Ext.getCmp("googlepanel").placefile}}}]});d=new Ext.TabPanel({title:"Text Data",enableTabScroll:true,isLoaded:false,id:"textTabPanel",
disabled:true,defaults:{bodyStyle:"padding:5px"}});d.on("activate",function(){if(!d.isLoaded){textTabsLoad();d.isLoaded=true}});textTabsLoad=function(){Ext.Ajax.request({waitMsg:"Loading...",url:"json-text.php",params:a(),method:"GET",success:function(e){e=Ext.util.JSON.decode(e.responseText);d.items.each(function(F){d.remove(F)});d.add({title:"Issuance",html:"<pre>"+e.data[0].report+"</pre>",xtype:"panel",autoScroll:true,tbar:[{text:"Print Text",icon:"icons/print.png",cls:"x-btn-text-icon",handler:function(){Ext.ux.Printer.print(Ext.getCmp("textTabPanel").getActiveTab())}}]});
for(var j=0;j<e.data[0].svs.length;j++)d.add({title:"Update "+(j+1),html:"<pre>"+e.data[0].svs[j]+"</pre>",xtype:"panel",autoScroll:true,tbar:[{text:"Print Text",icon:"icons/print.png",cls:"x-btn-text-icon",handler:function(){Ext.ux.Printer.print(Ext.getCmp("textTabPanel").getActiveTab())}}]});d.activate(j);d.isLoaded=true}})};f=new Ext.grid.GridPanel({id:"lsrGridPanel",isLoaded:false,store:C,disabled:true,loadMask:{msg:"Loading Data..."},cm:new Ext.grid.ColumnModel([x,{header:"Time",sortable:true,
dataIndex:"valid"},{header:"Event",width:100,sortable:true,dataIndex:"event"},{header:"Magnitude",sortable:true,dataIndex:"magnitude"},{header:"City",width:200,sortable:true,dataIndex:"city"},{header:"County",sortable:true,dataIndex:"county"}]),stripeRows:true,title:"Storm Reports within SBW",plugins:x,autoScroll:true});f.on("activate",function(){if(!this.isLoaded){p=a();p.sbw="1";this.getStore().load({params:p});this.isLoaded=true}});h=new Ext.grid.GridPanel({id:"allLsrGridPanel",title:"All Storm Reports",
isLoaded:false,store:D,disabled:true,loadMask:{msg:"Loading Data..."},cm:new Ext.grid.ColumnModel([y,{header:"Time (UTC)",sortable:true,dataIndex:"valid"},{header:"Event",width:100,sortable:true,dataIndex:"event"},{header:"Magnitude",sortable:true,dataIndex:"magnitude"},{header:"City",width:200,sortable:true,dataIndex:"city"},{header:"County",sortable:true,dataIndex:"county"}]),stripeRows:true,plugins:y,autoScroll:true});h.on("activate",function(){if(!this.isLoaded){this.getStore().load({params:a()});
this.isLoaded=true}});m=new Ext.grid.GridPanel({id:"ugc-grid",store:B,loadMask:{msg:"Loading Data..."},cm:new Ext.grid.ColumnModel([{header:"UGC",width:50,sortable:true,dataIndex:"ugc"},{header:"Name",width:200,sortable:true,dataIndex:"name"},{header:"Status",width:50,sortable:true,dataIndex:"status"},{header:"Issue (UTC)",sortable:true,dataIndex:"issue"},{header:"Expire (UTC)",sortable:true,dataIndex:"expire"}]),stripeRows:true,autoScroll:true,disabled:true,title:"Geography Included",collapsible:false,
animCollapse:false});m.on("activate",function(){if(!this.isLoaded){this.getStore().load({params:a()+"&sbw=1"});this.isLoaded=true}});k=new Ext.grid.GridPanel({id:"products-grid",tbar:[{text:"Print Grid",icon:"icons/print.png",cls:"x-btn-text-icon",handler:function(){Ext.ux.Printer.print(Ext.getCmp("products-grid"))}}],store:A,saveme:true,disabled:false,loadMask:{msg:"Loading Data..."},cm:new Ext.grid.ColumnModel([{header:"Event",width:40,sortable:true,dataIndex:"eventid"},{header:"Issued (UTC)",width:140,
sortable:true,dataIndex:"issued"},{header:"Expired (UTC)",width:140,sortable:true,dataIndex:"expired"},{header:"Area km**2",width:70,sortable:true,dataIndex:"area"},{header:"Locations",id:"locations",width:250,sortable:true,dataIndex:"locations"}]),plugins:z,stripeRows:true,autoScroll:true,title:"List Events",collapsible:false,animCollapse:false,listeners:{rowclick:function(e,j){record=e.getStore().getAt(j);Ext.getCmp("eventid").setValue(record.get("eventid"));Ext.getCmp("mainbutton").fireEvent("click",
{})},activate:function(){if(!this.isLoaded){this.getStore().load({params:a()});this.isLoaded=true}}}});getNexradTime=function(){if(v)return v;var e;if(n.getCount()==0){e=new date;e=e.add(Date.MINUTE,e.format("Z"))}else e=n.getAt(0).data.issue;roundDown=parseInt(e.format("i"))%5;return v=e=e.add(Date.MINUTE,0-roundDown)};g=new Ext.Panel({title:"SBW History",id:"sbwhist",isLoaded:false,disabled:true});g.on("activate",function(){if(!g.isLoaded){g.body.update(b());g.isLoaded=true}});i=new Ext.Panel({title:"RADAR Map",
id:"radarPabel",isLoaded:false,disabled:true});i.on("activate",function(){i.isLoaded||i.body.update(c());i.isLoaded=true});w=new Ext.Toolbar.TextItem("");new Ext.Viewport({layout:"border",items:[{region:"north",height:110,contentEl:cfg.header},{region:"west",width:210,collapsible:true,autoScroll:true,title:"VTEC Options",items:[E,{contentEl:"boilerplate"}]},new Ext.TabPanel({id:"mainPanel",region:"center",plain:true,enableTabScroll:true,defaults:{bodyStyle:"padding-left:5px"},tbar:new Ext.Toolbar({id:"main-status",
defaultText:"",items:[w]}),listeners:{render:function(){}},items:[{contentEl:"help",title:"Help",saveme:true,preventBodyReset:true},i,d,new App.RadarPanel({title:"Google Map",id:"googlepanel",listeners:{render:function(){Ext.getCmp("mainbutton").fireEvent("click",{})}},zoomLevel:9}),g,f,h,m,k],activeTab:0})]})});
