<?php
include("../../config/settings.inc.php");
session_start();
include("../../include/mlib.php");
include("../../include/forms.php");
include("../../include/iemaccess.php");
include("../../include/iemaccessob.php");
include("../../include/myview.php");
$t = new MyView();
$metar = isset($_GET['metar']) ? $_GET["metar"] : "no";
$sortcol = isset($_GET["sortcol"]) ? $_GET["sortcol"] : "ts";
$expiry = 60*60*24*100; // 100 days
//setcookie(session_name(), session_id(), time()+$expiry, "/");

$_SESSION['stations'] = Array();
if (isset($_COOKIE['stations'])){
    $_SESSION['stations'] = explode(",", $_COOKIE['stations']);
}
 
$st = isset($_GET["st"]) ? $_GET["st"] : "";
$str = isset($_GET["str"]) ? $_GET["str"] : "";

if ($st != ""){
  foreach ($st as $key => $value) {
    if (strlen($value) > 0 && $value != "ahack") {
        array_push( $_SESSION['stations'], $value);
    }
  }
}
if ($str != ""){
  foreach ($str as $key => $value) {
    if (strlen($value) > 0 && $value != "ahack") {
      foreach ($_SESSION['stations'] as $key2 => $value2){
        if ($value2 == $value){
          unset($_SESSION['stations'][$key2]);
        }
      }
    }
  } 
}
setcookie("stations", implode(",", $_SESSION['stations']), time() + $expiry, "/my/");
 
 $t->title = "My IEM Current Conditions";
 $t->refresh = "<meta http-equiv=\"refresh\" content=\"60;
 URL=current.phtml?sortcol=$sortcol&metar=$metar\">";
 $t->headextra = <<<EOF
 <script language="JavaScript" type="text/javascript">
<!--//BEGIN Script
function new_window(url) {
	link = 
	window.open(url,"Link","toolbar=0,location=0,directories=0,status=0,menubar=no,scrollbars=yes,resizable=yes,width=800,height=600");
} 
//END Script-->
</script>
EOF;
 $t->thispage = "current-sort";
$t->current_network = "My Favorites";

if (strlen($sortcol) == 0) {
	$sortcol = "valid";
}
$vals = Array("valid" => "Observation Time", "tmpf" => "Temperature",
		"dwpf" => "Dew Point", "pres" => "Altimeter", "relh" => "Relative Humidity",
		"sknt" => "Wind Speed", 12 => "20 min Gust",
		"gust" => "Peak Gust Today", "gtim" => "Time of Peak Gust",
		"pday" => "Today's Precipitation", "feel" => "Feels Like",
		"pmonth" => "Month's Precipitation", "phour" => "Hourly Precip",
		"tmpf0" => "Sensor 1 - Temp [F]",  "sname" => "Station Name",
		"tmpf1" => "Sensor 2 - Temp [F]",
		"tmpf2" => "Sensor 3 - Temp [F]",
		"tmpf3" => "Sensor 4 - Temp [F]",
		"dry0" => "Sensor 1 - Cond [F]",
		"dry1" => "Sensor 2 - Cond [F]",
		"dry2" => "Sensor 3 - Cond [F]",
		"dry3" => "Sensor 4 - Cond [F]",
		"ts" => "Observation Time", "min_tmpf" => "Low Air Temperature Today",
		"vsby" => "Visibility", "max_tmpf" => "High Air Temperature Today",
		"max_sknt_ts" => "Time of Peak Gust",
		"max_sknt" => "Wind Gust [knots]", "peak" => "Peak Wind Gust [kts]",
		"peak_ts" => "Time of Peak Wind Gust",
		"city" => "Site Name");

$ar = Array(
		"no" => "No",
		"yes" => "Yes"
);
$mselect = make_select("metar", $metar, $ar);

function aSortBySecondIndex($multiArray, $secondIndex) {
	while (list($firstIndex, ) = each($multiArray))
		$indexMap[$firstIndex] = @$multiArray[$firstIndex][$secondIndex];
	arsort($indexMap);
	while (list($firstIndex, ) = each($indexMap))
	if (is_numeric($firstIndex))
		$sortedArray[] = $multiArray[$firstIndex];
	else $sortedArray[$firstIndex] = $multiArray[$firstIndex];
	return $sortedArray;
}
function sortBySecondIndex($multiArray, $secondIndex) {
	while (list($firstIndex, ) = each($multiArray))
		$indexMap[$firstIndex] = @$multiArray[$firstIndex][$secondIndex];
	asort($indexMap);
	while (list($firstIndex, ) = each($indexMap))
	if (is_numeric($firstIndex))
		$sortedArray[] = $multiArray[$firstIndex];
	else $sortedArray[$firstIndex] = $multiArray[$firstIndex];
	return $sortedArray;
}

$iem = new IEMAccess();
$mydata = Array();
$doSF = 0;
foreach ($_SESSION['stations'] as $key => $value){
	if (strlen($value) == 7){
		$doSF = 1;
	} else {
		$iemob = $iem->getSingleSite($value);
		if (isset($iemob->invalid)){continue; }
		$mydata[$value] = $iemob->db;
		$mydata[$value]["sped"] = $mydata[$value]["sknt"] * 1.15078;
		$mydata[$value]["relh"] = relh(f2c($mydata[$value]["tmpf"]),
				f2c($mydata[$value]["dwpf"]) );
		$mydata[$value]["feel"] = feels_like($mydata[$value]["tmpf"],
				$mydata[$value]["relh"], $mydata[$value]["sped"]);

		$mydata[$value]["peak_ts"] = 0;
		$mydata[$value]["peak"] = 0;
		if ($mydata[$value]["max_gust"] > $mydata[$value]["max_sknt"]){
			$mydata[$value]["peak"] = $mydata[$value]["max_gust"];
			$mydata[$value]["peak_ts"] = strtotime(substr( $mydata[$value]["max_gust_ts"],0,16) );
		} else {
			$mydata[$value]["peak"] = $mydata[$value]["max_sknt"];
			if ($mydata[$value]["max_sknt_ts"] > 0) {
				$mydata[$value]["peak_ts"] = strtotime(substr( $mydata[$value]["max_sknt_ts"],0,16) );
			}
		}
		if ($mydata[$value]["pday"] < 0) $mydata[$value]["pday"] = "";
		if ($mydata[$value]["phour"] < 0) $mydata[$value]["phour"] = "";
		if ($mydata[$value]["vsby"] < 0) $mydata[$value]["vsby"] = "";

	}
}

if (sizeof($mydata) == 0){
	$t->content = "<p>There are currently 0 sites in your selected list.  Please visit
    one of the data network pages listed above and add sites to your favorites
    list.</p>";
	$t->render('sortables.phtml');
	die();
}
$uri = "current.phtml?metar=$metar&sortcol=";

$finalA = Array();
if ($sortcol == "sname"){
	$finalA = sortBySecondIndex($mydata, $sortcol);
}else{
	$finalA = aSortBySecondIndex($mydata, $sortcol);
}
$now = time();
$cgiStr = "";
$i = 0;
$table = "";
while (list ($key, $val) = each ($finalA))  {
	$i++;
	$parts = $finalA[$key];
	$cgiStr .= "st[]=". $key ."&";
	$tdiff = $now - $parts["ts"];
	$table .= "<tr";
	if ($i % 2 == 0)  $table .= " bgcolor='#eeeeee'";
	$table .= ">\n
    <td><input type=\"checkbox\" name=\"str[]\" value=\"".$key."\"></td>
    <th>". $parts["sname"] . " [". $parts["network"] ."]</th>";
	$table .= "<td ";
	if ($tdiff > 10000){
		$table .= 'bgcolor="red"';
		$format = "%b-%d %I:%M %p";
	} else if ($tdiff > 3600){
		$table .= 'bgcolor="green"';
		$format = "%I:%M %p";
	} else {
		$format = "%I:%M %p";
	}
	$table .= ">". strftime($format, $parts["ts"]) ."</td>";

	$table .= "<td align='center'>". round($parts["tmpf"],0) ."(<font color=\"#ff0000\">". round($parts["max_tmpf"],0) ."</font>/<font color=\"#0000ff\">". round($parts["min_tmpf"],0) .")</td>
          <td align='center'>". round($parts["dwpf"],0) ."</td>
          <td>". round($parts["feel"],0) ."</td>
          <td>". round($parts["relh"],0) ."</td>
          <td>". $parts["pres"] ."</td>
          <td>". $parts["vsby"] ."</td>
            <td>". round($parts["drct"],0) ."</td>
            <td>". round($parts["sknt"],0) ."</td><td>". round($parts["peak"],0) ." @ ";
	$table .= strftime($format, $parts["peak_ts"]) ;
	$table .= "</td>
          <td>". $parts["phour"] ."</td>
          <td>". $parts["pday"] ."</td></tr>\n";
	if ($metar == "yes") {
		$table .= "<tr";
		if ($i % 2 == 0)  $table .= " bgcolor='#eeeeee'";
		$table .= ">";
		$table .= "<td colspan=15 align=\"CENTER\">
             <font color=\"brown\">". $parts["raw"] ."</font></td>
             </tr>\n";
	}
}

?>


$t->content = <<<EOF
<form method="GET" action="current.phtml">
<input type="hidden" name="sortcol" value="{$sortcol}">

<div class="text"><p>
<table class="back" border=1 cellspacing=0 cellpadding=1>
<tr>
  <th>View Options:</th>
  <td>Include METARS (ASOS): {$mselect}
</td>
<td><input type="submit" value="Go!"></form></td>
</tr></table><p>


<h3 class="subtitle"><center>Current Conditions</center></h3><p>

<br>Sorted by: <b>({$vals[$sortcol]})</b>  &nbsp; &nbsp; 
Click on a column to sort it.<br>

<form method="GET" action="current.phtml">

<table style="width: 100%; font-size: 10pt;" class="ruler">
<thead>
<tr>

  <th rowspan="2">DEL</th>
  <th rowspan="2"><a href="{$uri}sname">Station:</a></th>
  <th rowspan="2"><a href="{$uri}ts">Valid</a></th>
  <th colspan=6></td>
  <th colspan="3" bgcolor="#EEEEEE">Wind Knots</th>
  <th colspan="2" bgcolor="#e6e6fa">Precipitation</th>
</tr>
<tr>
  <th><a href="{$uri}tmpf">Temp</a> (<a href="{$uri}max_tmpf">Hi</a>/<a href="{$uri}min_tmpf">Lo</a>)</th>
  <th><a href="{$uri}dwpf">DewP</a></th>
  <th><a href="{$uri}feel">Feels</a></th>
  <th><a href="{$uri}relh">RH%</a></th>
  <th><a href="{$uri}pres">Pres</a></th>
  <th><a href="{$uri}vsby">Vsby</a></th>
  <th>Dir</th>
  <th><a href="{$uri}sknt">Speed</a></th>
  <th><a href="{$uri}peak">Today Gust</a> 
    <a href="{$uri}peak_ts">@time</a></th>
  <th><a href="{$uri}phour">Hour</a></th>
  <th><a href="{$uri}pday">Today</a></th>
</tr>
 </thead>
<tbody>
{$table}
</tbody>
<tfoot>
<tr>
 <td></td>
 <td></td>
 <td></td>
 <td><a href="javascript:new_window('/GIS/apps/php/currents.phtml?var=tmpf&{$cgiStr}');">Plot</a> (<a href="javascript:new_window('/GIS/apps/php/currents.phtml?var=max_tmpf&{$cgiStr}');">Plot</a> / <a href="javascript:new_window('/GIS/apps/php/currents.phtml?var=min_tmpf&{$cgiStr}');">Plot</a> )</td>
 <td><a href="javascript:new_window('/GIS/apps/php/currents.phtml?var=dwpf&{$cgiStr}');">Plot</a></td>
 <td><a href="javascript:new_window('/GIS/apps/php/currents.phtml?var=feel&{$cgiStr}');">Plot</a></td>
 <td><a href="javascript:new_window('/GIS/apps/php/currents.phtml?var=relh&{$cgiStr}');">Plot</a></td>
 <td></td>
 <td><a href="javascript:new_window('/GIS/apps/php/currents.phtml?var=vsby&{$cgiStr}');">Plot</a></td>
 <td></td>
 <td><a href="javascript:new_window('/GIS/apps/php/currents.phtml?var=sknt&{$cgiStr}');">Plot</a></td>
 <td><a href="javascript:new_window('/GIS/apps/php/currents.phtml?var=max_sknt&{$cgiStr}');">Plot</a></td>
 <td colspan="3"></td>

</tr>
</tfoot>
</table>

<input type="submit" value="Remove Stations">
</form>
EOF;

 $mydata = Array();
 foreach ($_SESSION['stations'] as $key => $value){
   if (strlen($value) == 7){
     $value = substr($value, 0, 4);
     $iemob = $iem->getSingleSite($value);
     $mydata[$value] = $iemob->db;
     $mydata[$value]["ts"] = $iemob->ts;

     $t = Array($mydata[$value]['tsf0'], $mydata[$value]['tsf1'], 
      $mydata[$value]['tsf2'], $mydata[$value]['tsf3']);
     arsort($t);
     while (min($t) == -99.99){  
      $ba = array_pop($t); 
      if (sizeof($t) == 0) break;
      }
     if (sizeof($t) > 0){
      while ((max($t) - min($t)) > 20){ $ba = array_pop($t); }
      $mydata[$value]['pave_avg'] = array_sum($t) / sizeof($t);
     } else {
      $mydata[$value]['pave_avg'] = -99.99;
     }
   }
 }
$table = "";
 $finalA = Array();
  $finalA = aSortBySecondIndex($mydata, $sortcol);
  $i = 0;
  $now = time();
  while (list ($key, $val) = each ($finalA))  {
    $parts = $finalA[$key];
          $i++;
          $tdiff = $now - $parts["ts"];
    if ($tdiff > 86400*5){
      continue;
    }
          $table .= "<tr";
          if ($i % 2 == 0)  $table .= " bgcolor='#eeeeee'";  
            
          $table .= ">";
          $table .= "<td><input type=\"checkbox\" name=\"str[]\" 
            value=\"".$key."_SF\"></td>";
          $table .= "<th>". $parts["sname"] . "</th>";
  $table .= "<td";
  if ($tdiff > 11900){
    $table .= ' bgcolor="red">'. strftime("%b-%d-%y %I:%M %p", $parts["ts"]) .'</td>'
;
  } else if ($tdiff > 7200){
    $table .= ' bgcolor="orange">'. strftime("%b-%d %I:%M %p", $parts["ts"]) .'</td>'
;
  } else if ($tdiff > 3600){
    $table .= ' bgcolor="green">'. strftime("%I:%M %p", $parts["ts"]) .'</td>';
  } else {
  $table .= '>'. strftime("%I:%M %p", $parts["ts"]) .'</td>';
  }
     if ($parts["tsf0"] < -90) $tmpf0 = "M";
     else $tmpf0 = round($parts["tsf0"], 1);
     if ($parts["tsf1"] < -90) $tmpf1 = "M";
     else $tmpf1 = round($parts["tsf1"], 1);
     if ($parts["tsf2"] < -90) $tmpf2 = "M";
     else $tmpf2 = round($parts["tsf2"], 1);
     if ($parts["tsf3"] < -90) $tmpf3 = "M";
     else $tmpf3 = round($parts["tsf3"], 1);
     if ($parts["rwis_subf"] < -90) $subt = "M";
     else $subt = round($parts["rwis_subf"], 1);
     if ($parts["pave_avg"] < -90) $pave_avg = "M";
     else $pave_avg = round($parts["pave_avg"], 1);

            $table .= "<td align='center'>". $parts["tmpf"] ."</td>
            <td align='center'>". $parts["dwpf"] ."</td>
            <td align='center'>". $tmpf0 ."</td>
            <td align='center'>". $tmpf1 ."</td>
            <td align='center'>". $tmpf2 ."</td>
            <td align='center'>". $tmpf3 ."</td>
            <td align='center'>". $subt ."</td>
            <td align='center'>". $pave_avg ."</td>
            </tr>\n";


   }

if ($doSF == 1){
$content .= <<<EOF
<h3 align="center">RWIS Pavement Conditions</h3>
<form method="GET" action="/my/current.phtml">
<table border=1 style="font-size: 10pt;" cellspacing=0 cellpadding=2 width="100%">
<tr>
  <td rowspan="2">DEL:</td>
  <th rowspan="2"><a href="current.phtml?sortcol=sname">Station:</a></th>
  <th rowspan="2"><a href="current.phtml?sortcol=ts">Ob Time</a></th>
  <th colspan="2" bgcolor="#acdcda">Air:</th>
  <th bgcolor="#acdcda">Sensor 1</th>
  <th bgcolor="#acdcda">Sensor 2</th>
  <th bgcolor="#acdcda">Sensor 3</th>
  <th bgcolor="#acdcda">Sensor 4</th>
  <td></td>
  <td></td>
<tr>
  
  <th><a href="current.phtml?sortcol=tmpf">Temp</a></th>
  <th><a href="current.phtml?sortcol=dwpf">Dew P</a></th>
  <th><a href="current.phtml?sortcol=tsf0">Temp</a></th>
  <th><a href="current.phtml?sortcol=tsf1">Temp</a></th>
  <th><a href="current.phtml?sortcol=tsf2">Temp</a></th>
  <th><a href="current.phtml?sortcol=tsf3">Temp</a></th>
  <th><a href="current.phtml?sortcol=rwis_subf">Sub T</a></th>
  <th><a href="current.phtml?sortcol=pave_avg">Ave Surface Temp</a> [<b>2</b>]
</th>
{$table}
</table>
<input type="submit" value="Remove Stations">
</form>
EOF;
}

$content .= <<<EOF
<br><br>

<b>Notes:</b><br>
<b>1.</b> The plotting functionality does not work in all situations.  It 
does work sometimes!
<br><b>2. </b> The average surface temperature is calculated by the IEM using some
logic to account for sites without 4 sensors or broken sensors.

<br><br></div>
EOF;
$t->content = $content;
$t->render('sortables.phtml');

?>