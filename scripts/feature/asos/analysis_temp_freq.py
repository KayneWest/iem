import psycopg2
import pickle
import matplotlib.cm as cm

data = {'GHW': 0.46076560689612789, 'DVL': 0.6817180994530645,  'MIC': 0.40707632543151018, 'MIB': 0.7189798363260802, 'MIE': 0.38692812486723377, 'FWA': 0.32433285185981947, 'FNT': 0.48025624890753366, 'FNB': 0.12392947029149012, 'PAH': 0.082335039740115162, 'GSH': 0.3420239570425444, 'Y22': 0.82433967323641522, 
         'AXN': 0.41607350562040785,  'IWD': 0.65621421589603557, 'IOW': 0.20234156273861034, 'PIA': 0.22391342774554454, 'HSI': 0.21910317697565582, 'UIN': 0.18511695820264304, 'SPI': 0.18178349161094848, 'RAP': 0.77778078533275585, 'BWG': 0.084998666590471839, 'DIK': 0.78001034253870738, 'PIR': 0.5389442077355131, 'NRN': 0.35093171602153855, 'SAW': 0.71260395470229143, 'LBL': 0.37331041740082599, 'SPF': 0.84146271345612056, 'MNM': 0.59931271205877934, 'CKN': 0.511208934691879, 'OFF': 0.20528662239224107, 'BFF': 0.79583385005442797, 'OFK': 0.32026779144601164, 'PTK': 0.45367454682208652, 
        'IAB': 0.17466802132555009, 'GPZ': 0.68445582924752646, 'JVL': 0.40377130843019438, 'OIN': 0.39059583975530782, 'LAN': 0.45021278625254058, 'SYF': 0.64178287582001647, 'LAF': 0.23378678016275709, 'PHG': 0.35093171602153855, 'MZZ': 0.34172845819483511, 'DAY': 0.31008269335611871, 'FFO': 0.27576993545385342, 'FFM': 0.42475019695192107, 'APN': 0.61760641939000582, 'DBQ': 0.40588363193598886, 'LXN': 0.27376667778765218, 'SUE': 0.62091547903971656, 'PHP': 0.55353374771513053, 'MZH': 0.63605984829273143, 'VIH': 0.13933676997194849, 'SNY': 0.8457910038585803, 'GBG': 0.22045252345519251, 'BEH': 0.35498411164441684, 'DTL': 0.50508333276851858, 'DET': 0.44664198337682692, 'FLV': 0.12296886917876312, 'GUS': 0.25912026323154957, 'HDE': 0.36556899254376291, 'EST': 0.33320795178430918, 'EMP': 0.13619124804893709, 'CMY': 0.45707031716771102, 'CMX': 0.69944519320045762, 'FDY': 0.3438288002014942, 'MWC': 0.46067908621733095, 'DTW': 0.42539868820389781, 'AEL': 0.30088815789473683, 'EVV': 0.11646753772268899, 'RHI': 0.58243295266606387, 'HUF': 0.16014596824359381, 'LSE': 0.35232673935824527, 'MFD': 0.41569116809116807, 'UGN': 0.36657425022049428, 'SZL': 0.12321219272569471, 'TDZ': 0.36433318483348692, 'JMS': 0.5749765415419118, 'OSU': 0.26272703452937446, 'HUT': 0.18637506389065511, 'OSH': 0.4727860340671276, 'BRL': 0.20335532184122637, 'OJC': 0.12055229942081824, 'PKD': 0.5841067749315928, 'OSC': 0.55259481186303039, 'SUX': 0.2467238098883508, 'CEY': 0.080600443390083626, 'BDE': 0.61120025232107855, 'MHE': 0.36195733753465781, 'GRR': 0.4441163036152429, 'MHK': 0.13892101193361495, 'GCK': 0.40373327770943851, 'DLH': 0.7062580246079313, 'YKN': 0.32173682122385244, '9V9': 0.44337465342270316, 
        'FOE': 0.16493809028597911, 'DSM': 0.24797830122800743, 'GRB': 0.46196582929621577, 'SGF': 0.12711372780393951, 'RFD': 0.3361856334747525, 'DDC': 0.38478596456415554, 'FTK': 0.14337231389725377, 'LJF': 0.45041698938607044, 'MCI': 0.12488215738464556, 'PBH': 0.57569217924930605, 'GRI': 0.28880097602790467, 'HON': 0.40422559070951253, 'RWF': 0.35776379151451099, 'CBK': 0.63452579291620392, 'HTL': 0.60169594428612394, 'MGN': 0.51525300098490068, 'ANJ': 0.69104197807894274, 'MOT': 0.71538931629896341, 'INL': 0.6722518218066823, 'ANW': 0.49484359049623461, 'TBN': 0.13548269993553266, 'IND': 0.21498420243879843, 'BTL': 0.4579201159215423, 'JLN': 0.094410211513669504, 'HLC': 0.35684938125975735, 'P28': 0.27465392463410698, 'CZD': 0.29973872846191013, 'LCK': 0.24124696308663543, 'ACB': 0.57755087176218878,  'FSD': 0.38941334435034086, 'MKG': 0.45139072662228102, 'ILN': 0.26443893481065894, 'AKR': 0.3862111887923001, 'GLD': 0.63622247269242838, 'ATW': 0.52437468219335404, 'SUS': 0.13992832742777339, 'ISN': 0.80116729855289159, 'LUK': 0.16845920970994477, 'ATY': 0.47413212336348715, 'ODX': 0.31878779705520116, 'IKW': 0.52069006051338751, 'N60': 0.63595952363804287, 'BKL': 0.27949502950798488, 'ZZV': 0.24642928000124487, 'CMH': 0.29111650485436891, 'IRK': 0.19040130626968152, 'LNR': 0.3574592085194383, 'JKL': 0.13474426348280039, 'LNN': 0.55915778595251631, 'OLU': 0.23440307674460942, 'LNK': 0.20991397416669461, 'ICT': 0.1761314305143197, 'BIE': 0.19951982950095648, 'FCM': 0.36046212086316698, 'TVC': 0.56867511162236151, 'CUT': 0.97245426029109627, 'ELO': 0.72092386306782341, 'RDR': 0.56553055520373063, 'CLE': 0.38541176891733092, 'FRI': 0.15882910186243926, 'LBF': 0.4517028020244464, 'IML': 0.54275434979889536, 'FRM': 0.36179392792958348, 'VTN': 0.62118654481719349, 'JEF': 0.098894560837557752, 'MVE': 0.39707878656945622, 'AUW': 0.5277391150325782, 'BBW': 0.37808632400437248, 'UNO': 0.11081690839865738, 'AID': 0.45413170266570302, 'ALO': 0.29218288007278165, 'OMA': 0.20163933528322761, 'TVF': 0.6042561526394119, 'ARV': 0.64632236510118501, 'BKX': 0.48698620031815082, 'LEM': 0.82433967323641522, 'BJI': 0.65460222678081337, 'MML': 0.46356128567298388, 'MKT': 0.40527083126628494, 'CDR': 0.78498415498300378, 'LEX': 0.17931452819204804, 'PLN': 0.59952702889100074, 'ORD': 0.36641931828206536, 'BRD': 0.50552292306432012, 'SBN': 0.3493232607033232, 'FBL': 0.37457693254220381, 'SLN': 0.17277558325645939, 'CGF': 0.53123444593312374, 'MKE': 0.42701084864937955, 'MKC': 0.1390000312913959, 'CIU': 0.72911269250454369, 'YIP': 0.47372891160519781, 'AZO': 0.42049123167843383, 'TOP': 0.11215723991018878, 'YNG': 0.423735620998896, 'MSP': 0.44864959241134161, 'CAK': 0.39361227428321172, 'MSN': 0.39849832049002176, 'HYS': 0.47868588772356274, 'TOL': 0.37977476222199408, 'LOU': 0.13917045751458834, 'LOZ': 0.10739906894157551, 'CVG': 0.22810976384311837, 'VOK': 0.42315929718927053, 'AIA': 0.77585846251257873, 
         'LWD': 0.19200119404534777, 'CAD': 0.60672425230135152, 'MBL': 0.53339516030797907, 'ONL': 0.36344867874810449, 'FAR': 0.52302523545266288, 'MBG': 0.52533077507295034, 'SDF': 0.16798449380258099, 'TZR': 0.23697839441540683, 'RCA': 0.79963656927793869, 'SGH': 0.19494750493047613, 'HIB': 0.65599594533630134, 'P58': 0.55365444253756058, 'P59': 0.8332263996314746, 'POF': 0.072027645505168339, 'EAR': 0.28066602959563891, 'EAU': 0.45454696725850779, 'BIS': 0.66636616842456398, 
        'MBS': 0.50839209546181185, 'CNU': 0.097797443927746669, 'ESC': 0.56249576602249995, 'STC': 0.55710339014796784, 'STL': 0.15784632860616601, 'MLI': 0.26317625477239021, 'MTW': 0.50952688256425627, 'STJ': 0.13425435470997593, 'MCW': 0.32896368972884638, 'ABR': 0.48505107668696945, 'SLO': 0.10284779932574768, 'STP': 0.38375517746365562, 'HOP': 0.086082253645904577, 'CWA': 0.49130835773756976, 'MTC': 0.43952894138952575, 'GOV': 0.62660338188309117, 'BMG': 0.27759216208705167, 'CNK': 0.22529562437615758, 'JXN': 0.40228304644864049, 'RSL': 0.25048950203650727, 'MCK': 0.38310114785256477, 'OTM': 0.21525941335157112, 'P67': 0.68648998060762767, 'CID': 0.25340599299638411, 'OTG': 0.44814439482571383, 'GFK': 0.54981763621845736, 'ARB': 0.42834240716159111, 'RST': 0.40398306567729614, 'IMT': 0.61057056472463367}


ASOS = psycopg2.connect(database='asos', host='iemdb', user='nobody')
cursor = ASOS.cursor()

def do_station(station):
    cursor.execute("""
     SELECT sum(tm), sum(case when dwpf < 59.5 then tm else null end) from 
      (SELECT valid - lag(valid) over (ORDER by valid ASC) as tm, dwpf from alldata
      where station = %s and extract(month from valid) = 7 
      and dwpf > -50) as foo
     WHERE tm < '1 day'::interval
    """, (station,))
    row = cursor.fetchone()
    if row[0] is None:
        return None
    return (row[1].days * 86400.0 + row[1].seconds) /  (row[0].days * 86400.0 + row[0].seconds)

import network
nt = network.Table(('IA_ASOS','MO_ASOS','IL_ASOS', 'ND_ASOS', 'AWOS',
          'WI_ASOS','MN_ASOS', 'SD_ASOS', 'NE_ASOS', 'KS_ASOS',
          'IN_ASOS','KY_ASOS','OH_ASOS','MI_ASOS'))

"""
#for line in OLD.split("\n"):
#    tokens = line.split()
#    data[ tokens[0]] = tokens[1]
for sid in nt.sts.keys():
    if nt.sts[sid]['archive_begin'] is None:
        continue
    if nt.sts[sid]['archive_begin'].year > 1990:
        #print 'SKIP', sid
        continue
    data[sid] = do_station(sid)
    print sid, data[sid]
"""
#print data
vals = []
lats = []
lons = []
for sid in data.keys():
    if nt.sts[sid]['network'] == 'OH_ASOS' and data[sid] > 0.5:
        print sid, data[sid]
    vals.append( float( data[sid] ) * 100.0 )
    lats.append( nt.sts[ sid ]['lat'] )
    lons.append( nt.sts[ sid ]['lon'] )

from pyiem.plot import MapPlot
import numpy as np

m = MapPlot(sector='midwest',
            title=r'Percentage of Time during July with Dew Point below 60$^\circ$F',
            subtitle='Based on hourly station data for sites with data prior to 1990')
m.contourf(lons, lats, vals, np.arange(0,101,10.0), cmap=cm.get_cmap('hsv'),
           units='%')
#m.plot_values(lons, lats, vals, '%.0f')
m.postprocess(filename='test.ps')
import iemplot
iemplot.makefeature('test')