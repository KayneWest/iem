
import pg
import mx.DateTime
import network

now = mx.DateTime.now()

nt = network.Table('IACLIMATE')

conn = pg.connect("coop", "iemdb", user="nobody")
lats = []
lons = []
vals = []
"""
for id in nt.sts.keys():
  rs = conn.query("SELECT day, high, low, precip from alldata 
       where stationid = '%s' and sday != '0229' 
       and year >= 1893 ORDER by day ASC" % (id.lower(),) ).dictresult()

  lts = None
  hrecords = {}
  for row in rs:
    ts = mx.DateTime.strptime(row['day'], '%Y-%m-%d')
    doy = int(ts.strftime("%j"))
    if not hrecords.has_key( ts.strftime("%m%d") ):
      hrecords[ ts.strftime("%m%d") ] = row['high']
    if row['high'] >= hrecords[ ts.strftime("%m%d") ]:
      hrecords[ ts.strftime("%m%d") ] = row['high']
      lts = ts

  lats.append( nt.sts[id]['lat'] )
  lons.append( nt.sts[id]['lon'] )
  vals.append( (now - lts).days )
"""
lats = [42.270000000000003, 41.107799999999997, 41.880000000000003, 41.32, 41.719999999999999, 43.280000000000001, 42.07, 43.380000000000003, 43.43, 41.280000000000001, 42.700000000000003, 40.68, 42.880000000000003, 40.75, 41.030000000000001, 40.780799999999999, 41.399999999999999, 42.469999999999999, 42.030000000000001, 41.037199999999999, 42.43, 41.670000000000002, 41.979999999999997, 43.270000000000003, 42.479999999999997, 42.07, 40.6233, 42.020000000000003, 42.119999999999997, 41.32, 41.32, 40.609999999999999, 43.180799999999998, 41.030000000000001, 43.0, 42.07, 41.420000000000002, 43.079999999999998, 42.630000000000003, 43.049999999999997, 42.68, 43.07, 42.649999999999999, 41.530000000000001, 42.369999999999997, 40.719999999999999, 41.649999999999999, 42.82, 43.420000000000002, 42.829999999999998, 41.799999999999997, 40.780000000000001, 41.299999999999997, 40.700000000000003, 41.329999999999998, 42.799999999999997, 42.530000000000001, 41.0, 41.649999999999999, 42.5, 40.950000000000003, 43.049999999999997, 43.280000000000001, 43.450000000000003, 42.75, 43.32, 42.75, 41.68, 42.170000000000002, 42.07, 41.829999999999998, 42.75, 41.0, 41.630000000000003, 43.07, 42.469999999999999, 41.0, 42.530000000000001, 43.149999999999999, 42.041699999999999, 41.0, 42.549999999999997, 41.329999999999998, 42.399999999999999, 41.780000000000001, 41.68, 40.719999999999999, 41.75, 41.569699999999997, 41.019399999999997, 43.450000000000003, 42.399999999999999, 41.700000000000003, 41.719999999999999, 42.020000000000003, 40.75, 42.030000000000001, 42.361899999999999, 42.780000000000001, 42.030000000000001, 41.369999999999997, 40.719999999999999, 42.729999999999997, 42.299999999999997, 40.380000000000003]
lons = [-90.420000000000002, -92.446700000000007, -92.269999999999996, -95.379999999999995, -92.730000000000004, -92.799999999999997, -92.930000000000007, -92.099999999999994, -96.170000000000002, -91.680000000000007, -94.670000000000002, -94.719999999999999, -95.150000000000006, -92.430000000000007, -92.799999999999997, -91.119200000000006, -91.069999999999993, -93.799999999999997, -93.799999999999997, -94.394199999999998, -95.0, -92.019999999999996, -92.579999999999998, -91.480000000000004, -91.819999999999993, -95.819999999999993, -93.950800000000001, -94.379999999999995, -91.299999999999997, -93.129999999999995, -92.650000000000006, -91.329999999999998, -95.852800000000002, -91.950000000000003, -96.480000000000004, -90.700000000000003, -95.0, -95.629999999999995, -95.180000000000007, -92.670000000000002, -94.200000000000003, -94.299999999999997, -91.920000000000002, -93.650000000000006, -92.780000000000001, -92.870000000000005, -91.530000000000001, -92.25, -94.829999999999998, -91.799999999999997, -90.269999999999996, -95.349999999999994, -94.469999999999999, -94.25, -94.0, -96.170000000000002, -90.650000000000006, -95.230000000000004, -95.319999999999993, -94.200000000000003, -91.549999999999997, -92.319999999999993, -93.629999999999995, -93.219999999999999, -93.200000000000003, -91.780000000000001, -92.780000000000001, -94.5, -92.0, -94.849999999999994, -94.120000000000005, -95.530000000000001, -94.75, -95.799999999999997, -93.799999999999997, -91.450000000000003, -93.319999999999993, -93.269999999999996, -93.200000000000003, -93.890600000000006, -95.769999999999996, -92.400000000000006, -92.200000000000003, -94.620000000000005, -91.120000000000005, -93.599999999999994, -95.030000000000001, -93.25, -90.395600000000002, -93.750200000000007, -95.719999999999999, -96.379999999999995, -93.049999999999997, -94.930000000000007, -96.099999999999994, -95.650000000000006, -95.329999999999998, -93.0989, -91.099999999999994, -91.579999999999998, -93.549999999999997, -91.969999999999999, -93.75, -91.019999999999996, -91.370000000000005]
vals = [2.7609449274644806, 2.7609449274644806, 2.7609449274644806, 2.7609449274644806, 2.7609449274644806, 1.7609449274644808, 3.7609449274644806, 1.7609449274644808, 2.7609449274644806, 2.7609449274644806, 2.7609449274644806, 2.7609449274644806, 2.7609449274644806, 2.7609449274644806, 2.7609449274644806, 2.7609449274644806, 2.7609449274644806, 3.7609449274644806, 707, 2.7609449274644806, 2.7609449274644806, 2.7609449274644806, 2.7609449274644806, 1.7609449274644808, 2.7609449274644806, 1.7609449274644808, 2.7609449274644806, 2.7609449274644806, 2.7609449274644806, 2.7609449274644806, 140.76094492746449, 2.7609449274644806, 2.7609449274644806, 140.76094492746449, 3.7609449274644806, 2.7609449274644806, 2.7609449274644806, 2.7609449274644806, 2.7609449274644806, 2.7609449274644806, 2.7609449274644806, 2.7609449274644806, 2.7609449274644806, 193.76094492746449, 2.7609449274644806, 2.7609449274644806, 2.7609449274644806, 2.7609449274644806, 2.7609449274644806, 2.7609449274644806, 2.7609449274644806, 3.7609449274644806, 2.7609449274644806, 584.76094492746449, 2.7609449274644806, 3.7609449274644806, 2.7609449274644806, 3.7609449274644806, 2.7609449274644806, 2.7609449274644806, 2.7609449274644806, 2.7609449274644806, 2.7609449274644806, 1.7609449274644808, 2.7609449274644806, 2.7609449274644806, 2.7609449274644806, 2.7609449274644806, 2.7609449274644806, 2.7609449274644806, 2.7609449274644806, 2.7609449274644806, 584.76094492746449, 3.7609449274644806, 2.7609449274644806, 1.7609449274644808, 2.7609449274644806, 2.7609449274644806, 2.7609449274644806, 3.7609449274644806, 3.7609449274644806, 2.7609449274644806, 2.7609449274644806, 2.7609449274644806, 2.7609449274644806, 2.7609449274644806, 584.76094492746449, 2.7609449274644806, 2.7609449274644806, 2.7609449274644806, 1.7609449274644808, 3.7609449274644806, 2.7609449274644806, 2.7609449274644806, 3.7609449274644806, 2.7609449274644806, 2.7609449274644806, 2.7609449274644806, 2.7609449274644806, 535.76094492746449, 188.76094492746449, 193.76094492746449, 2.7609449274644806, 2.7609449274644806, 140.76094492746449]

lons[ vals.index(707) ] += 0.09
lats[ vals.index(707) ] -= 0.09

import iemplot
cfg = {
 '_title' : 'Days Since Last Record High Temperature',
 '_valid' : 'Valid 11 Oct 2010',
 '_showvalues' : True,
 '_format' : '%.0f',
 'lbTitleString' : 'Days'
}
fp = iemplot.simple_valplot(lons, lats, vals, cfg)
#iemplot.postprocess( fp , "")
iemplot.makefeature( fp )
